
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initleftANDORleftMENORMAYORMENOR_IGUALMAYOR_IGUALIGUALNOIGUALleftSIMBOLO_SUMASIMBOLO_RESTAleftSIMBOLO_MULTIPLICACIONSIMBOLO_DIVICIONleftSIMBOLO_POTENCIASIMBOLO_MODrightNEGATIVOAND BOOL CHAR COMA COS DATO_TIPO_CHAR DATO_TIPO_FLOAT64 DATO_TIPO_INT64 DATO_TIPO_STRING DER_PARENTESIS ELSE END FALSE FLOAT FLOAT64 FOR FUNCION ID IF IGUAL IN INT64 IZQ_PARENTESIS LOG LOG10 LOWER MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL NOIGUAL NOT NOTHING OR PARSE PRINT PRINTLN PUNTO_COMA PUNTO_PUNTO RETURN SALTO SIMBOLO_DIVICION SIMBOLO_IGUAL SIMBOLO_MOD SIMBOLO_MULTIPLICACION SIMBOLO_POTENCIA SIMBOLO_RESTA SIMBOLO_SUMA SIN SQRT STRING STRING_FUNC TABULADOR TAN TRUE TRUNC TYPEOF UPPER WHILEinstruccion  : funcion_exp\n                    | funcion_exp_paraminstruccion  : condicioninit   : instruccioninstruccion  : contenidocondicion    : expresion MENOR expresion\n                    | expresion MAYOR expresion\n                    | expresion IGUAL expresion\n                    | expresion NOIGUAL expresion\n                    | expresion MENOR_IGUAL expresion\n                    | expresion MAYOR_IGUAL expresionfuncion_exp    :  dato_id IZQ_PARENTESIS DER_PARENTESIScontenido   : expresionexpresion    : IZQ_PARENTESIS expresion DER_PARENTESIScontenido   : expresion COMA contenidoexpresion    : expresion SIMBOLO_SUMA expresion\n                    | expresion SIMBOLO_RESTA expresion\n                    | expresion SIMBOLO_DIVICION expresion\n                    | expresion SIMBOLO_MULTIPLICACION expresion\n                    | expresion SIMBOLO_POTENCIA expresion\n                    | expresion SIMBOLO_MOD expresionfuncion_exp_param    :  dato_id IZQ_PARENTESIS parametros DER_PARENTESIScondicion    : condicion OR condicion\n                    | condicion AND condicionparametros   : expresionexpresion    : LOG IZQ_PARENTESIS expresion COMA expresion DER_PARENTESIS\n                    | TRUNC IZQ_PARENTESIS tipo COMA expresion DER_PARENTESIS\n                    | PARSE IZQ_PARENTESIS tipo COMA expresion DER_PARENTESISparametros   : expresion COMA parametroscondicion    : NOT condiciontipo     : INT64\n                | FLOAT64\n                | NOTHING\n                | STRING\n                | CHAR\n                | BOOLcondicion    : IZQ_PARENTESIS condicion DER_PARENTESISexpresion    : LOG10 IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | SIN IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | COS IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | TAN IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | SQRT IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | UPPER IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | LOWER IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | STRING_FUNC IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | TYPEOF IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | FLOAT IZQ_PARENTESIS expresion DER_PARENTESISexpresion    : dato_numerico\n                    | dato_booleano\n                    | funcion_exp\n                    | funcion_exp_param\n                    | expresion_idexpresion  : SIMBOLO_RESTA expresion %prec NEGATIVOdato_booleano    : TRUE\n                        | FALSEdato_numerico    : DATO_TIPO_FLOAT64\n                        | DATO_TIPO_INT64dato_numerico    : DATO_TIPO_STRING\n                        | DATO_TIPO_CHARexpresion_id    : dato_iddato_id    : ID'
    
_lr_action_items = {'NOT':([0,8,10,35,36,],[10,10,10,10,10,]),'IZQ_PARENTESIS':([0,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[8,37,8,8,-61,58,59,60,61,62,63,64,65,66,67,68,69,70,71,8,8,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'ID':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'LOG':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'TRUNC':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'PARSE':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'LOG10':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'SIN':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'COS':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'TAN':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'SQRT':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'UPPER':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'LOWER':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'STRING_FUNC':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'TYPEOF':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'FLOAT':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'SIMBOLO_RESTA':([0,3,4,7,8,9,10,11,12,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,62,63,64,65,66,67,68,69,70,71,74,76,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,],[12,-50,-51,-60,12,50,12,-61,12,-48,-49,-52,-56,-57,-58,-59,-54,-55,12,12,12,50,-50,-51,12,12,12,12,12,12,12,12,12,12,12,12,12,50,-53,12,12,12,12,12,12,12,12,12,12,12,12,-12,50,-14,50,50,50,50,50,50,50,-16,-17,-18,-19,-20,-21,50,50,50,50,50,50,50,50,50,50,50,50,-22,12,12,12,12,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,50,50,50,-26,-27,-28,]),'DATO_TIPO_FLOAT64':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'DATO_TIPO_INT64':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'DATO_TIPO_STRING':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'DATO_TIPO_CHAR':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TRUE':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'FALSE':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'$end':([1,2,3,4,5,6,7,9,11,26,27,28,29,30,31,32,33,34,40,41,55,57,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,113,118,119,120,121,122,123,124,125,126,127,132,133,134,],[0,-4,-1,-2,-3,-5,-60,-13,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,-50,-51,-30,-53,-23,-24,-12,-37,-14,-6,-7,-8,-9,-10,-11,-13,-15,-16,-17,-18,-19,-20,-21,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-26,-27,-28,]),'MENOR':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,39,40,41,56,57,74,78,87,88,89,90,91,92,113,118,119,120,121,122,123,124,125,126,127,132,133,134,],[-50,-51,-60,42,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,42,-50,-51,42,-53,-12,-14,-16,-17,-18,-19,-20,-21,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-26,-27,-28,]),'MAYOR':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,39,40,41,56,57,74,78,87,88,89,90,91,92,113,118,119,120,121,122,123,124,125,126,127,132,133,134,],[-50,-51,-60,43,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,43,-50,-51,43,-53,-12,-14,-16,-17,-18,-19,-20,-21,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-26,-27,-28,]),'IGUAL':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,39,40,41,56,57,74,78,87,88,89,90,91,92,113,118,119,120,121,122,123,124,125,126,127,132,133,134,],[-50,-51,-60,44,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,44,-50,-51,44,-53,-12,-14,-16,-17,-18,-19,-20,-21,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-26,-27,-28,]),'NOIGUAL':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,39,40,41,56,57,74,78,87,88,89,90,91,92,113,118,119,120,121,122,123,124,125,126,127,132,133,134,],[-50,-51,-60,45,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,45,-50,-51,45,-53,-12,-14,-16,-17,-18,-19,-20,-21,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-26,-27,-28,]),'MENOR_IGUAL':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,39,40,41,56,57,74,78,87,88,89,90,91,92,113,118,119,120,121,122,123,124,125,126,127,132,133,134,],[-50,-51,-60,46,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,46,-50,-51,46,-53,-12,-14,-16,-17,-18,-19,-20,-21,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-26,-27,-28,]),'MAYOR_IGUAL':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,39,40,41,56,57,74,78,87,88,89,90,91,92,113,118,119,120,121,122,123,124,125,126,127,132,133,134,],[-50,-51,-60,47,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,47,-50,-51,47,-53,-12,-14,-16,-17,-18,-19,-20,-21,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-26,-27,-28,]),'COMA':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,40,41,57,74,76,78,85,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,113,118,119,120,121,122,123,124,125,126,127,132,133,134,],[-50,-51,-60,48,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,-50,-51,-53,-12,114,-14,48,-16,-17,-18,-19,-20,-21,115,116,-31,-32,-33,-34,-35,-36,117,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-26,-27,-28,]),'SIMBOLO_SUMA':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,39,40,41,56,57,74,76,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,103,104,105,106,107,108,109,110,111,112,113,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,],[-50,-51,-60,49,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,49,-50,-51,49,-53,-12,49,-14,49,49,49,49,49,49,49,-16,-17,-18,-19,-20,-21,49,49,49,49,49,49,49,49,49,49,49,49,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,49,49,49,-26,-27,-28,]),'SIMBOLO_DIVICION':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,39,40,41,56,57,74,76,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,103,104,105,106,107,108,109,110,111,112,113,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,],[-50,-51,-60,51,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,51,-50,-51,51,-53,-12,51,-14,51,51,51,51,51,51,51,51,51,-18,-19,-20,-21,51,51,51,51,51,51,51,51,51,51,51,51,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,51,51,51,-26,-27,-28,]),'SIMBOLO_MULTIPLICACION':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,39,40,41,56,57,74,76,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,103,104,105,106,107,108,109,110,111,112,113,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,],[-50,-51,-60,52,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,52,-50,-51,52,-53,-12,52,-14,52,52,52,52,52,52,52,52,52,-18,-19,-20,-21,52,52,52,52,52,52,52,52,52,52,52,52,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,52,52,52,-26,-27,-28,]),'SIMBOLO_POTENCIA':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,39,40,41,56,57,74,76,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,103,104,105,106,107,108,109,110,111,112,113,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,],[-50,-51,-60,53,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,53,-50,-51,53,-53,-12,53,-14,53,53,53,53,53,53,53,53,53,53,53,-20,-21,53,53,53,53,53,53,53,53,53,53,53,53,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,53,53,53,-26,-27,-28,]),'SIMBOLO_MOD':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,39,40,41,56,57,74,76,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,103,104,105,106,107,108,109,110,111,112,113,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,],[-50,-51,-60,54,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,54,-50,-51,54,-53,-12,54,-14,54,54,54,54,54,54,54,54,54,54,54,-20,-21,54,54,54,54,54,54,54,54,54,54,54,54,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,54,54,54,-26,-27,-28,]),'OR':([5,7,11,26,27,28,29,30,31,32,33,34,38,40,41,55,57,72,73,74,77,78,79,80,81,82,83,84,87,88,89,90,91,92,113,118,119,120,121,122,123,124,125,126,127,132,133,134,],[35,-60,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,35,-50,-51,35,-53,-23,-24,-12,-37,-14,-6,-7,-8,-9,-10,-11,-16,-17,-18,-19,-20,-21,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-26,-27,-28,]),'AND':([5,7,11,26,27,28,29,30,31,32,33,34,38,40,41,55,57,72,73,74,77,78,79,80,81,82,83,84,87,88,89,90,91,92,113,118,119,120,121,122,123,124,125,126,127,132,133,134,],[36,-60,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,36,-50,-51,36,-53,-23,-24,-12,-37,-14,-6,-7,-8,-9,-10,-11,-16,-17,-18,-19,-20,-21,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-26,-27,-28,]),'DER_PARENTESIS':([7,11,26,27,28,29,30,31,32,33,34,37,38,39,40,41,55,57,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,92,93,103,104,105,106,107,108,109,110,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,],[-60,-61,-48,-49,-52,-56,-57,-58,-59,-54,-55,74,77,78,-50,-51,-30,-53,-23,-24,-12,113,-25,-37,-14,-6,-7,-8,-9,-10,-11,-16,-17,-18,-19,-20,-21,78,118,119,120,121,122,123,124,125,126,127,-22,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-29,132,133,134,-26,-27,-28,]),'INT64':([60,61,],[96,96,]),'FLOAT64':([60,61,],[97,97,]),'NOTHING':([60,61,],[98,98,]),'STRING':([60,61,],[99,99,]),'CHAR':([60,61,],[100,100,]),'BOOL':([60,61,],[101,101,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instruccion':([0,],[2,]),'funcion_exp':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[3,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'funcion_exp_param':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[4,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'condicion':([0,8,10,35,36,],[5,38,55,72,73,]),'contenido':([0,48,],[6,86,]),'dato_id':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'expresion':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[9,39,56,57,56,56,76,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,103,104,105,106,107,108,109,110,111,112,76,129,130,131,]),'dato_numerico':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'dato_booleano':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expresion_id':([0,8,10,12,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,66,67,68,69,70,71,114,115,116,117,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'parametros':([37,114,],[75,128,]),'tipo':([60,61,],[95,102,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('instruccion -> funcion_exp','instruccion',1,'p_instruccion_funcion','funcion.py',6),
  ('instruccion -> funcion_exp_param','instruccion',1,'p_instruccion_funcion','funcion.py',7),
  ('instruccion -> condicion','instruccion',1,'p_instruccion_condicion','condicion.py',7),
  ('init -> instruccion','init',1,'p_init','init.py',7),
  ('instruccion -> contenido','instruccion',1,'p_instruccion_expresion','print.py',7),
  ('condicion -> expresion MENOR expresion','condicion',3,'p_condicion_arit','condicion.py',13),
  ('condicion -> expresion MAYOR expresion','condicion',3,'p_condicion_arit','condicion.py',14),
  ('condicion -> expresion IGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',15),
  ('condicion -> expresion NOIGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',16),
  ('condicion -> expresion MENOR_IGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',17),
  ('condicion -> expresion MAYOR_IGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',18),
  ('funcion_exp -> dato_id IZQ_PARENTESIS DER_PARENTESIS','funcion_exp',3,'p_funcion_dato','funcion.py',13),
  ('contenido -> expresion','contenido',1,'p_imprimir_contenido','print.py',13),
  ('expresion -> IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',3,'p_expresion_par','expresion.py',14),
  ('contenido -> expresion COMA contenido','contenido',3,'p_imprimir_contenido_coma','print.py',19),
  ('expresion -> expresion SIMBOLO_SUMA expresion','expresion',3,'p_expresion_binario','expresion.py',20),
  ('expresion -> expresion SIMBOLO_RESTA expresion','expresion',3,'p_expresion_binario','expresion.py',21),
  ('expresion -> expresion SIMBOLO_DIVICION expresion','expresion',3,'p_expresion_binario','expresion.py',22),
  ('expresion -> expresion SIMBOLO_MULTIPLICACION expresion','expresion',3,'p_expresion_binario','expresion.py',23),
  ('expresion -> expresion SIMBOLO_POTENCIA expresion','expresion',3,'p_expresion_binario','expresion.py',24),
  ('expresion -> expresion SIMBOLO_MOD expresion','expresion',3,'p_expresion_binario','expresion.py',25),
  ('funcion_exp_param -> dato_id IZQ_PARENTESIS parametros DER_PARENTESIS','funcion_exp_param',4,'p_funcion_dato_param','funcion.py',22),
  ('condicion -> condicion OR condicion','condicion',3,'p_condicion_logic','condicion.py',32),
  ('condicion -> condicion AND condicion','condicion',3,'p_condicion_logic','condicion.py',33),
  ('parametros -> expresion','parametros',1,'p_parametros','funcion.py',36),
  ('expresion -> LOG IZQ_PARENTESIS expresion COMA expresion DER_PARENTESIS','expresion',6,'p_expresion_nativa_binaria','expresion.py',39),
  ('expresion -> TRUNC IZQ_PARENTESIS tipo COMA expresion DER_PARENTESIS','expresion',6,'p_expresion_nativa_binaria','expresion.py',40),
  ('expresion -> PARSE IZQ_PARENTESIS tipo COMA expresion DER_PARENTESIS','expresion',6,'p_expresion_nativa_binaria','expresion.py',41),
  ('parametros -> expresion COMA parametros','parametros',3,'p_parametros_coma','funcion.py',44),
  ('condicion -> NOT condicion','condicion',2,'p_condicion_not','condicion.py',47),
  ('tipo -> INT64','tipo',1,'p_expresion_tipo','expresion.py',54),
  ('tipo -> FLOAT64','tipo',1,'p_expresion_tipo','expresion.py',55),
  ('tipo -> NOTHING','tipo',1,'p_expresion_tipo','expresion.py',56),
  ('tipo -> STRING','tipo',1,'p_expresion_tipo','expresion.py',57),
  ('tipo -> CHAR','tipo',1,'p_expresion_tipo','expresion.py',58),
  ('tipo -> BOOL','tipo',1,'p_expresion_tipo','expresion.py',59),
  ('condicion -> IZQ_PARENTESIS condicion DER_PARENTESIS','condicion',3,'p_condicion_par','condicion.py',59),
  ('expresion -> LOG10 IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',65),
  ('expresion -> SIN IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',66),
  ('expresion -> COS IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',67),
  ('expresion -> TAN IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',68),
  ('expresion -> SQRT IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',69),
  ('expresion -> UPPER IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',70),
  ('expresion -> LOWER IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',71),
  ('expresion -> STRING_FUNC IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',72),
  ('expresion -> TYPEOF IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',73),
  ('expresion -> FLOAT IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',74),
  ('expresion -> dato_numerico','expresion',1,'p_expresion_numerico','expresion.py',86),
  ('expresion -> dato_booleano','expresion',1,'p_expresion_numerico','expresion.py',87),
  ('expresion -> funcion_exp','expresion',1,'p_expresion_numerico','expresion.py',88),
  ('expresion -> funcion_exp_param','expresion',1,'p_expresion_numerico','expresion.py',89),
  ('expresion -> expresion_id','expresion',1,'p_expresion_numerico','expresion.py',90),
  ('expresion -> SIMBOLO_RESTA expresion','expresion',2,'p_expresion_negativo','expresion.py',95),
  ('dato_booleano -> TRUE','dato_booleano',1,'p_expresion_dato_booleano','expresion.py',107),
  ('dato_booleano -> FALSE','dato_booleano',1,'p_expresion_dato_booleano','expresion.py',108),
  ('dato_numerico -> DATO_TIPO_FLOAT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',117),
  ('dato_numerico -> DATO_TIPO_INT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',118),
  ('dato_numerico -> DATO_TIPO_STRING','dato_numerico',1,'p_expresion_dato_string','expresion.py',124),
  ('dato_numerico -> DATO_TIPO_CHAR','dato_numerico',1,'p_expresion_dato_string','expresion.py',125),
  ('expresion_id -> dato_id','expresion_id',1,'p_expresion_dato','expresion.py',131),
  ('dato_id -> ID','dato_id',1,'p_expresion_dato_id','expresion.py',141),
]
