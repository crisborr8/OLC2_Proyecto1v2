
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initleftANDORleftMENORMAYORMENOR_IGUALMAYOR_IGUALIGUALNOIGUALleftSIMBOLO_SUMASIMBOLO_RESTAleftSIMBOLO_MULTIPLICACIONSIMBOLO_DIVICIONrightNEGATIVOAND COMA DATO_TIPO_FLOAT64 DATO_TIPO_INT64 DATO_TIPO_STRING DER_PARENTESIS ELSE END FOR FUNCION ID IF IGUAL IN IZQ_PARENTESIS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL NOIGUAL NOT OR PRINT PRINTLN PUNTO_COMA PUNTO_PUNTO SALTO SIMBOLO_DIVICION SIMBOLO_IGUAL SIMBOLO_MULTIPLICACION SIMBOLO_RESTA SIMBOLO_SUMA TABULADOR WHILEinstruccion  : funcion_exp\n                    | funcion_exp_paraminstruccion  : condicioninit   : instruccioninstruccion  : contenidocondicion    : expresion MENOR expresion\n                    | expresion MAYOR expresion\n                    | expresion IGUAL expresion\n                    | expresion NOIGUAL expresion\n                    | expresion MENOR_IGUAL expresion\n                    | expresion MAYOR_IGUAL expresionexpresion    : IZQ_PARENTESIS expresion DER_PARENTESISfuncion_exp    :  dato_id IZQ_PARENTESIS DER_PARENTESIScontenido   : expresionexpresion    : expresion SIMBOLO_SUMA expresion\n                    | expresion SIMBOLO_RESTA expresion\n                    | expresion SIMBOLO_DIVICION expresion\n                    | expresion SIMBOLO_MULTIPLICACION expresioncontenido   : expresion COMA contenidofuncion_exp_param    :  dato_id IZQ_PARENTESIS parametros DER_PARENTESIScondicion    : condicion OR condicion\n                    | condicion AND condicionexpresion    : dato_numerico\n                    | expresion_idparametros   : expresionexpresion  : SIMBOLO_RESTA expresion %prec NEGATIVOparametros   : expresion COMA parametroscondicion    : NOT condiciondato_numerico    : DATO_TIPO_FLOAT64\n                        | DATO_TIPO_INT64condicion    : IZQ_PARENTESIS condicion DER_PARENTESISdato_numerico    : DATO_TIPO_STRINGexpresion_id    : dato_iddato_id    : ID'
    
_lr_action_items = {'NOT':([0,8,10,18,19,],[10,10,10,10,10,]),'IZQ_PARENTESIS':([0,7,8,10,11,12,18,19,20,24,25,26,27,28,29,30,31,32,33,34,38,60,],[8,20,8,8,-34,38,8,8,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'ID':([0,8,10,12,18,19,20,24,25,26,27,28,29,30,31,32,33,34,38,60,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'SIMBOLO_RESTA':([0,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,43,45,46,47,48,49,50,51,52,54,55,56,57,58,60,],[12,-33,12,32,12,-34,12,-23,-24,-29,-30,-32,12,12,12,32,-33,12,12,12,12,12,12,12,12,12,12,12,32,-26,12,32,-12,32,32,32,32,32,32,32,-15,-16,-17,-18,32,12,]),'DATO_TIPO_FLOAT64':([0,8,10,12,18,19,20,24,25,26,27,28,29,30,31,32,33,34,38,60,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'DATO_TIPO_INT64':([0,8,10,12,18,19,20,24,25,26,27,28,29,30,31,32,33,34,38,60,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'DATO_TIPO_STRING':([0,8,10,12,18,19,20,24,25,26,27,28,29,30,31,32,33,34,38,60,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'$end':([1,2,3,4,5,6,7,9,11,13,14,15,16,17,23,35,37,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,],[0,-4,-1,-2,-3,-5,-33,-14,-34,-23,-24,-29,-30,-32,-33,-28,-26,-21,-22,-13,-31,-12,-6,-7,-8,-9,-10,-11,-14,-19,-15,-16,-17,-18,-20,]),'OR':([5,11,13,14,15,16,17,21,23,35,37,39,40,44,45,46,47,48,49,50,51,54,55,56,57,],[18,-34,-23,-24,-29,-30,-32,18,-33,18,-26,-21,-22,-31,-12,-6,-7,-8,-9,-10,-11,-15,-16,-17,-18,]),'AND':([5,11,13,14,15,16,17,21,23,35,37,39,40,44,45,46,47,48,49,50,51,54,55,56,57,],[19,-34,-23,-24,-29,-30,-32,19,-33,19,-26,-21,-22,-31,-12,-6,-7,-8,-9,-10,-11,-15,-16,-17,-18,]),'MENOR':([7,9,11,13,14,15,16,17,22,23,36,37,45,54,55,56,57,],[-33,24,-34,-23,-24,-29,-30,-32,24,-33,24,-26,-12,-15,-16,-17,-18,]),'MAYOR':([7,9,11,13,14,15,16,17,22,23,36,37,45,54,55,56,57,],[-33,25,-34,-23,-24,-29,-30,-32,25,-33,25,-26,-12,-15,-16,-17,-18,]),'IGUAL':([7,9,11,13,14,15,16,17,22,23,36,37,45,54,55,56,57,],[-33,26,-34,-23,-24,-29,-30,-32,26,-33,26,-26,-12,-15,-16,-17,-18,]),'NOIGUAL':([7,9,11,13,14,15,16,17,22,23,36,37,45,54,55,56,57,],[-33,27,-34,-23,-24,-29,-30,-32,27,-33,27,-26,-12,-15,-16,-17,-18,]),'MENOR_IGUAL':([7,9,11,13,14,15,16,17,22,23,36,37,45,54,55,56,57,],[-33,28,-34,-23,-24,-29,-30,-32,28,-33,28,-26,-12,-15,-16,-17,-18,]),'MAYOR_IGUAL':([7,9,11,13,14,15,16,17,22,23,36,37,45,54,55,56,57,],[-33,29,-34,-23,-24,-29,-30,-32,29,-33,29,-26,-12,-15,-16,-17,-18,]),'COMA':([7,9,11,13,14,15,16,17,23,37,43,45,52,54,55,56,57,],[-33,30,-34,-23,-24,-29,-30,-32,-33,-26,60,-12,30,-15,-16,-17,-18,]),'SIMBOLO_SUMA':([7,9,11,13,14,15,16,17,22,23,36,37,43,45,46,47,48,49,50,51,52,54,55,56,57,58,],[-33,31,-34,-23,-24,-29,-30,-32,31,-33,31,-26,31,-12,31,31,31,31,31,31,31,-15,-16,-17,-18,31,]),'SIMBOLO_DIVICION':([7,9,11,13,14,15,16,17,22,23,36,37,43,45,46,47,48,49,50,51,52,54,55,56,57,58,],[-33,33,-34,-23,-24,-29,-30,-32,33,-33,33,-26,33,-12,33,33,33,33,33,33,33,33,33,-17,-18,33,]),'SIMBOLO_MULTIPLICACION':([7,9,11,13,14,15,16,17,22,23,36,37,43,45,46,47,48,49,50,51,52,54,55,56,57,58,],[-33,34,-34,-23,-24,-29,-30,-32,34,-33,34,-26,34,-12,34,34,34,34,34,34,34,34,34,-17,-18,34,]),'DER_PARENTESIS':([11,13,14,15,16,17,20,21,22,23,35,37,39,40,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,61,],[-34,-23,-24,-29,-30,-32,41,44,45,-33,-28,-26,-21,-22,59,-25,-31,-12,-6,-7,-8,-9,-10,-11,-15,-16,-17,-18,45,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instruccion':([0,],[2,]),'funcion_exp':([0,],[3,]),'funcion_exp_param':([0,],[4,]),'condicion':([0,8,10,18,19,],[5,21,35,39,40,]),'contenido':([0,30,],[6,53,]),'dato_id':([0,8,10,12,18,19,20,24,25,26,27,28,29,30,31,32,33,34,38,60,],[7,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'expresion':([0,8,10,12,18,19,20,24,25,26,27,28,29,30,31,32,33,34,38,60,],[9,22,36,37,36,36,43,46,47,48,49,50,51,52,54,55,56,57,58,43,]),'dato_numerico':([0,8,10,12,18,19,20,24,25,26,27,28,29,30,31,32,33,34,38,60,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'expresion_id':([0,8,10,12,18,19,20,24,25,26,27,28,29,30,31,32,33,34,38,60,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'parametros':([20,60,],[42,61,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('instruccion -> funcion_exp','instruccion',1,'p_instruccion_funcion','funcion.py',6),
  ('instruccion -> funcion_exp_param','instruccion',1,'p_instruccion_funcion','funcion.py',7),
  ('instruccion -> condicion','instruccion',1,'p_instruccion_condicion','condicion.py',7),
  ('init -> instruccion','init',1,'p_init','init.py',7),
  ('instruccion -> contenido','instruccion',1,'p_instruccion_expresion','print.py',7),
  ('condicion -> expresion MENOR expresion','condicion',3,'p_condicion_arit','condicion.py',13),
  ('condicion -> expresion MAYOR expresion','condicion',3,'p_condicion_arit','condicion.py',14),
  ('condicion -> expresion IGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',15),
  ('condicion -> expresion NOIGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',16),
  ('condicion -> expresion MENOR_IGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',17),
  ('condicion -> expresion MAYOR_IGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',18),
  ('expresion -> IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',3,'p_expresion_par','expresion.py',13),
  ('funcion_exp -> dato_id IZQ_PARENTESIS DER_PARENTESIS','funcion_exp',3,'p_funcion_dato','funcion.py',13),
  ('contenido -> expresion','contenido',1,'p_imprimir_contenido','print.py',13),
  ('expresion -> expresion SIMBOLO_SUMA expresion','expresion',3,'p_expresion_binario','expresion.py',19),
  ('expresion -> expresion SIMBOLO_RESTA expresion','expresion',3,'p_expresion_binario','expresion.py',20),
  ('expresion -> expresion SIMBOLO_DIVICION expresion','expresion',3,'p_expresion_binario','expresion.py',21),
  ('expresion -> expresion SIMBOLO_MULTIPLICACION expresion','expresion',3,'p_expresion_binario','expresion.py',22),
  ('contenido -> expresion COMA contenido','contenido',3,'p_imprimir_contenido_coma','print.py',19),
  ('funcion_exp_param -> dato_id IZQ_PARENTESIS parametros DER_PARENTESIS','funcion_exp_param',4,'p_funcion_dato_param','funcion.py',22),
  ('condicion -> condicion OR condicion','condicion',3,'p_condicion_logic','condicion.py',32),
  ('condicion -> condicion AND condicion','condicion',3,'p_condicion_logic','condicion.py',33),
  ('expresion -> dato_numerico','expresion',1,'p_expresion_numerico','expresion.py',36),
  ('expresion -> expresion_id','expresion',1,'p_expresion_numerico','expresion.py',37),
  ('parametros -> expresion','parametros',1,'p_parametros','funcion.py',36),
  ('expresion -> SIMBOLO_RESTA expresion','expresion',2,'p_expresion_negativo','expresion.py',42),
  ('parametros -> expresion COMA parametros','parametros',3,'p_parametros_coma','funcion.py',42),
  ('condicion -> NOT condicion','condicion',2,'p_condicion_not','condicion.py',47),
  ('dato_numerico -> DATO_TIPO_FLOAT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',54),
  ('dato_numerico -> DATO_TIPO_INT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',55),
  ('condicion -> IZQ_PARENTESIS condicion DER_PARENTESIS','condicion',3,'p_condicion_par','condicion.py',59),
  ('dato_numerico -> DATO_TIPO_STRING','dato_numerico',1,'p_expresion_dato_string','expresion.py',61),
  ('expresion_id -> dato_id','expresion_id',1,'p_expresion_dato','expresion.py',67),
  ('dato_id -> ID','dato_id',1,'p_expresion_dato_id','expresion.py',77),
]
