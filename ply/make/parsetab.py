
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initleftANDORleftMENORMAYORMENOR_IGUALMAYOR_IGUALIGUALNOIGUALleftSIMBOLO_SUMASIMBOLO_RESTAleftSIMBOLO_MULTIPLICACIONSIMBOLO_DIVICIONrightNEGATIVOAND COMA DATO_TIPO_FLOAT64 DATO_TIPO_INT64 DATO_TIPO_STRING DER_PARENTESIS ELSE END FOR FUNCION ID IF IGUAL IN IZQ_PARENTESIS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL NOIGUAL NOT OR PRINT PRINTLN PUNTO_COMA PUNTO_PUNTO SALTO SIMBOLO_DIVICION SIMBOLO_IGUAL SIMBOLO_MULTIPLICACION SIMBOLO_RESTA SIMBOLO_SUMA TABULADOR WHILEinstruccion  : funcion_exp PUNTO_COMAinstruccion  : condicioninit   : instruccioninstruccion  : contenidofuncion_exp    :  dato_id IZQ_PARENTESIS DER_PARENTESIScondicion    : expresion MENOR expresion\n                    | expresion MAYOR expresion\n                    | expresion IGUAL expresion\n                    | expresion NOIGUAL expresion\n                    | expresion MENOR_IGUAL expresion\n                    | expresion MAYOR_IGUAL expresionexpresion    : IZQ_PARENTESIS expresion DER_PARENTESIScontenido   : expresionexpresion    : expresion SIMBOLO_SUMA expresion\n                    | expresion SIMBOLO_RESTA expresion\n                    | expresion SIMBOLO_DIVICION expresion\n                    | expresion SIMBOLO_MULTIPLICACION expresioncontenido   : expresion COMA contenidocondicion    : condicion OR condicion\n                    | condicion AND condicionexpresion    : dato_numerico\n                    | expresion_idexpresion  : SIMBOLO_RESTA expresion %prec NEGATIVOcondicion    : NOT condiciondato_numerico    : DATO_TIPO_FLOAT64\n                        | DATO_TIPO_INT64condicion    : IZQ_PARENTESIS condicion DER_PARENTESISdato_numerico    : DATO_TIPO_STRINGexpresion_id    : dato_iddato_id    : ID'
    
_lr_action_items = {'NOT':([0,7,9,18,19,],[9,9,9,9,9,]),'IZQ_PARENTESIS':([0,6,7,9,10,11,18,19,24,25,26,27,28,29,30,31,32,33,34,38,],[7,20,7,7,-30,38,7,7,38,38,38,38,38,38,38,38,38,38,38,38,]),'ID':([0,7,9,11,18,19,24,25,26,27,28,29,30,31,32,33,34,38,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'SIMBOLO_RESTA':([0,6,7,8,9,10,11,12,13,14,15,16,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,43,44,45,46,47,48,49,50,52,53,54,55,56,],[11,-29,11,32,11,-30,11,-21,-22,-25,-26,-28,11,11,32,-29,11,11,11,11,11,11,11,11,11,11,11,32,-23,11,-12,32,32,32,32,32,32,32,-14,-15,-16,-17,32,]),'DATO_TIPO_FLOAT64':([0,7,9,11,18,19,24,25,26,27,28,29,30,31,32,33,34,38,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'DATO_TIPO_INT64':([0,7,9,11,18,19,24,25,26,27,28,29,30,31,32,33,34,38,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'DATO_TIPO_STRING':([0,7,9,11,18,19,24,25,26,27,28,29,30,31,32,33,34,38,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'$end':([1,2,4,5,6,8,10,12,13,14,15,16,17,23,35,37,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[0,-3,-2,-4,-29,-13,-30,-21,-22,-25,-26,-28,-1,-29,-24,-23,-19,-20,-27,-12,-6,-7,-8,-9,-10,-11,-13,-18,-14,-15,-16,-17,]),'PUNTO_COMA':([3,41,],[17,-5,]),'OR':([4,10,12,13,14,15,16,21,23,35,37,39,40,42,43,44,45,46,47,48,49,52,53,54,55,],[18,-30,-21,-22,-25,-26,-28,18,-29,18,-23,-19,-20,-27,-12,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,]),'AND':([4,10,12,13,14,15,16,21,23,35,37,39,40,42,43,44,45,46,47,48,49,52,53,54,55,],[19,-30,-21,-22,-25,-26,-28,19,-29,19,-23,-19,-20,-27,-12,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,]),'MENOR':([6,8,10,12,13,14,15,16,22,23,36,37,43,52,53,54,55,],[-29,24,-30,-21,-22,-25,-26,-28,24,-29,24,-23,-12,-14,-15,-16,-17,]),'MAYOR':([6,8,10,12,13,14,15,16,22,23,36,37,43,52,53,54,55,],[-29,25,-30,-21,-22,-25,-26,-28,25,-29,25,-23,-12,-14,-15,-16,-17,]),'IGUAL':([6,8,10,12,13,14,15,16,22,23,36,37,43,52,53,54,55,],[-29,26,-30,-21,-22,-25,-26,-28,26,-29,26,-23,-12,-14,-15,-16,-17,]),'NOIGUAL':([6,8,10,12,13,14,15,16,22,23,36,37,43,52,53,54,55,],[-29,27,-30,-21,-22,-25,-26,-28,27,-29,27,-23,-12,-14,-15,-16,-17,]),'MENOR_IGUAL':([6,8,10,12,13,14,15,16,22,23,36,37,43,52,53,54,55,],[-29,28,-30,-21,-22,-25,-26,-28,28,-29,28,-23,-12,-14,-15,-16,-17,]),'MAYOR_IGUAL':([6,8,10,12,13,14,15,16,22,23,36,37,43,52,53,54,55,],[-29,29,-30,-21,-22,-25,-26,-28,29,-29,29,-23,-12,-14,-15,-16,-17,]),'COMA':([6,8,10,12,13,14,15,16,23,37,43,50,52,53,54,55,],[-29,30,-30,-21,-22,-25,-26,-28,-29,-23,-12,30,-14,-15,-16,-17,]),'SIMBOLO_SUMA':([6,8,10,12,13,14,15,16,22,23,36,37,43,44,45,46,47,48,49,50,52,53,54,55,56,],[-29,31,-30,-21,-22,-25,-26,-28,31,-29,31,-23,-12,31,31,31,31,31,31,31,-14,-15,-16,-17,31,]),'SIMBOLO_DIVICION':([6,8,10,12,13,14,15,16,22,23,36,37,43,44,45,46,47,48,49,50,52,53,54,55,56,],[-29,33,-30,-21,-22,-25,-26,-28,33,-29,33,-23,-12,33,33,33,33,33,33,33,33,33,-16,-17,33,]),'SIMBOLO_MULTIPLICACION':([6,8,10,12,13,14,15,16,22,23,36,37,43,44,45,46,47,48,49,50,52,53,54,55,56,],[-29,34,-30,-21,-22,-25,-26,-28,34,-29,34,-23,-12,34,34,34,34,34,34,34,34,34,-16,-17,34,]),'DER_PARENTESIS':([10,12,13,14,15,16,20,21,22,23,35,37,39,40,42,43,44,45,46,47,48,49,52,53,54,55,56,],[-30,-21,-22,-25,-26,-28,41,42,43,-29,-24,-23,-19,-20,-27,-12,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instruccion':([0,],[2,]),'funcion_exp':([0,],[3,]),'condicion':([0,7,9,18,19,],[4,21,35,39,40,]),'contenido':([0,30,],[5,51,]),'dato_id':([0,7,9,11,18,19,24,25,26,27,28,29,30,31,32,33,34,38,],[6,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'expresion':([0,7,9,11,18,19,24,25,26,27,28,29,30,31,32,33,34,38,],[8,22,36,37,36,36,44,45,46,47,48,49,50,52,53,54,55,56,]),'dato_numerico':([0,7,9,11,18,19,24,25,26,27,28,29,30,31,32,33,34,38,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'expresion_id':([0,7,9,11,18,19,24,25,26,27,28,29,30,31,32,33,34,38,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('instruccion -> funcion_exp PUNTO_COMA','instruccion',2,'p_instruccion_funcion','funcion.py',6),
  ('instruccion -> condicion','instruccion',1,'p_instruccion_condicion','condicion.py',7),
  ('init -> instruccion','init',1,'p_init','init.py',7),
  ('instruccion -> contenido','instruccion',1,'p_instruccion_expresion','print.py',7),
  ('funcion_exp -> dato_id IZQ_PARENTESIS DER_PARENTESIS','funcion_exp',3,'p_funcion_dato','funcion.py',12),
  ('condicion -> expresion MENOR expresion','condicion',3,'p_condicion_arit','condicion.py',13),
  ('condicion -> expresion MAYOR expresion','condicion',3,'p_condicion_arit','condicion.py',14),
  ('condicion -> expresion IGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',15),
  ('condicion -> expresion NOIGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',16),
  ('condicion -> expresion MENOR_IGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',17),
  ('condicion -> expresion MAYOR_IGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',18),
  ('expresion -> IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',3,'p_expresion_par','expresion.py',13),
  ('contenido -> expresion','contenido',1,'p_imprimir_contenido','print.py',13),
  ('expresion -> expresion SIMBOLO_SUMA expresion','expresion',3,'p_expresion_binario','expresion.py',19),
  ('expresion -> expresion SIMBOLO_RESTA expresion','expresion',3,'p_expresion_binario','expresion.py',20),
  ('expresion -> expresion SIMBOLO_DIVICION expresion','expresion',3,'p_expresion_binario','expresion.py',21),
  ('expresion -> expresion SIMBOLO_MULTIPLICACION expresion','expresion',3,'p_expresion_binario','expresion.py',22),
  ('contenido -> expresion COMA contenido','contenido',3,'p_imprimir_contenido_coma','print.py',19),
  ('condicion -> condicion OR condicion','condicion',3,'p_condicion_logic','condicion.py',32),
  ('condicion -> condicion AND condicion','condicion',3,'p_condicion_logic','condicion.py',33),
  ('expresion -> dato_numerico','expresion',1,'p_expresion_numerico','expresion.py',36),
  ('expresion -> expresion_id','expresion',1,'p_expresion_numerico','expresion.py',37),
  ('expresion -> SIMBOLO_RESTA expresion','expresion',2,'p_expresion_negativo','expresion.py',42),
  ('condicion -> NOT condicion','condicion',2,'p_condicion_not','condicion.py',47),
  ('dato_numerico -> DATO_TIPO_FLOAT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',54),
  ('dato_numerico -> DATO_TIPO_INT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',55),
  ('condicion -> IZQ_PARENTESIS condicion DER_PARENTESIS','condicion',3,'p_condicion_par','condicion.py',59),
  ('dato_numerico -> DATO_TIPO_STRING','dato_numerico',1,'p_expresion_dato_string','expresion.py',61),
  ('expresion_id -> dato_id','expresion_id',1,'p_expresion_dato','expresion.py',67),
  ('dato_id -> ID','dato_id',1,'p_expresion_dato_id','expresion.py',77),
]
