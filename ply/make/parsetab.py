
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initleftANDORleftMENORMAYORMENOR_IGUALMAYOR_IGUALIGUALNOIGUALleftSIMBOLO_SUMASIMBOLO_RESTAleftSIMBOLO_MULTIPLICACIONSIMBOLO_DIVICIONleftSIMBOLO_POTENCIASIMBOLO_MODrightNEGATIVOAND BOOL CHAR COMA COS DATO_TIPO_CHAR DATO_TIPO_FLOAT64 DATO_TIPO_INT64 DATO_TIPO_STRING DER_LLAVE DER_PARENTESIS ELSE END FALSE FLOAT FLOAT64 FOR FUNCION ID IF IGUAL IN INT64 IZQ_LLAVE IZQ_PARENTESIS LOG LOG10 LOWER MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL NOIGUAL NOT NOTHING OR PARSE PRINT PRINTLN PUNTO_COMA PUNTO_PUNTO RETURN SALTO SIMBOLO_DIVICION SIMBOLO_IGUAL SIMBOLO_MOD SIMBOLO_MULTIPLICACION SIMBOLO_POTENCIA SIMBOLO_RESTA SIMBOLO_SUMA SIN SQRT STRING STRING_FUNC TABULADOR TAN TRUE TRUNC TYPEOF UPPER WHILEexpresion_id    : dato_id array_expinstruccion  : funcion_exp\n                    | funcion_exp_paraminstruccion  : condicioninit   : instruccioninstruccion  : contenidocondicion    : expresion MENOR expresion\n                    | expresion MAYOR expresion\n                    | expresion IGUAL expresion\n                    | expresion NOIGUAL expresion\n                    | expresion MENOR_IGUAL expresion\n                    | expresion MAYOR_IGUAL expresionfuncion_exp    :  dato_id IZQ_PARENTESIS DER_PARENTESIScontenido   : expresionexpresion    : IZQ_PARENTESIS expresion DER_PARENTESISexpresion_id    : dato_idcontenido   : expresion COMA contenidoexpresion    : expresion SIMBOLO_SUMA expresion\n                    | expresion SIMBOLO_RESTA expresion\n                    | expresion SIMBOLO_DIVICION expresion\n                    | expresion SIMBOLO_MULTIPLICACION expresion\n                    | expresion SIMBOLO_POTENCIA expresion\n                    | expresion SIMBOLO_MOD expresionfuncion_exp_param    :  dato_id IZQ_PARENTESIS parametros DER_PARENTESISarray_exp    : IZQ_LLAVE expresion DER_LLAVEcondicion    : condicion OR condicion\n                    | condicion AND condicionarray_exp    : array_exp array_expparametros   : expresionexpresion    : LOG IZQ_PARENTESIS expresion COMA expresion DER_PARENTESIS\n                    | TRUNC IZQ_PARENTESIS tipo COMA expresion DER_PARENTESIS\n                    | PARSE IZQ_PARENTESIS tipo COMA expresion DER_PARENTESISparametros   : expresion COMA parametrosarray    : IZQ_LLAVE parametros DER_LLAVEcondicion    : NOT condiciontipo     : INT64\n                | FLOAT64\n                | NOTHING\n                | STRING\n                | CHAR\n                | BOOLcondicion    : IZQ_PARENTESIS condicion DER_PARENTESISexpresion    : LOG10 IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | SIN IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | COS IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | TAN IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | SQRT IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | UPPER IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | LOWER IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | STRING_FUNC IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | TYPEOF IZQ_PARENTESIS expresion DER_PARENTESIS\n                    | FLOAT IZQ_PARENTESIS expresion DER_PARENTESISexpresion    : dato_numerico\n                    | dato_booleano\n                    | funcion_exp\n                    | funcion_exp_param\n                    | expresion_id\n                    | arrayexpresion  : SIMBOLO_RESTA expresion %prec NEGATIVOdato_booleano    : TRUE\n                        | FALSEdato_numerico    : DATO_TIPO_FLOAT64\n                        | DATO_TIPO_INT64dato_numerico    : DATO_TIPO_STRING\n                        | DATO_TIPO_CHARdato_id    : ID'
    
_lr_action_items = {'NOT':([0,8,10,37,38,],[10,10,10,10,10,]),'IZQ_PARENTESIS':([0,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[8,39,8,8,-66,62,63,64,65,66,67,68,69,70,71,72,73,74,75,62,8,8,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'ID':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'LOG':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'TRUNC':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'PARSE':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'LOG10':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'SIN':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'COS':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'TAN':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'SQRT':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'UPPER':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'LOWER':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'STRING_FUNC':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'TYPEOF':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'FLOAT':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'SIMBOLO_RESTA':([0,3,4,7,8,9,10,11,12,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,66,67,68,69,70,71,72,73,74,75,77,80,82,83,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,],[12,-55,-56,-16,12,54,12,-66,12,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,12,12,12,12,-1,12,54,-55,-56,12,12,12,12,12,12,12,12,12,12,12,12,12,54,-59,12,12,12,12,12,12,12,12,12,12,12,12,54,-13,-28,54,-15,54,54,54,54,54,54,54,-18,-19,-20,-21,-22,-23,54,54,54,54,54,54,54,54,54,54,54,54,-34,12,-24,-25,12,12,12,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,54,54,54,-30,-31,-32,]),'DATO_TIPO_FLOAT64':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'DATO_TIPO_INT64':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'DATO_TIPO_STRING':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'DATO_TIPO_CHAR':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'TRUE':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'FALSE':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'IZQ_LLAVE':([0,7,8,10,11,12,36,37,38,39,40,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,82,121,123,124,125,126,],[36,41,36,36,-66,36,36,36,36,36,41,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,41,36,-25,36,36,36,]),'$end':([1,2,3,4,5,6,7,9,11,26,27,28,29,30,31,32,33,34,35,40,44,45,59,61,78,79,80,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,120,122,123,127,128,129,130,131,132,133,134,135,136,141,142,143,],[0,-5,-2,-3,-4,-6,-16,-14,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,-55,-56,-35,-59,-26,-27,-13,-28,-42,-15,-7,-8,-9,-10,-11,-12,-14,-17,-18,-19,-20,-21,-22,-23,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-30,-31,-32,]),'MENOR':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,35,40,43,44,45,60,61,80,82,85,94,95,96,97,98,99,120,122,123,127,128,129,130,131,132,133,134,135,136,141,142,143,],[-55,-56,-16,46,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,46,-55,-56,46,-59,-13,-28,-15,-18,-19,-20,-21,-22,-23,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-30,-31,-32,]),'MAYOR':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,35,40,43,44,45,60,61,80,82,85,94,95,96,97,98,99,120,122,123,127,128,129,130,131,132,133,134,135,136,141,142,143,],[-55,-56,-16,47,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,47,-55,-56,47,-59,-13,-28,-15,-18,-19,-20,-21,-22,-23,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-30,-31,-32,]),'IGUAL':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,35,40,43,44,45,60,61,80,82,85,94,95,96,97,98,99,120,122,123,127,128,129,130,131,132,133,134,135,136,141,142,143,],[-55,-56,-16,48,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,48,-55,-56,48,-59,-13,-28,-15,-18,-19,-20,-21,-22,-23,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-30,-31,-32,]),'NOIGUAL':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,35,40,43,44,45,60,61,80,82,85,94,95,96,97,98,99,120,122,123,127,128,129,130,131,132,133,134,135,136,141,142,143,],[-55,-56,-16,49,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,49,-55,-56,49,-59,-13,-28,-15,-18,-19,-20,-21,-22,-23,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-30,-31,-32,]),'MENOR_IGUAL':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,35,40,43,44,45,60,61,80,82,85,94,95,96,97,98,99,120,122,123,127,128,129,130,131,132,133,134,135,136,141,142,143,],[-55,-56,-16,50,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,50,-55,-56,50,-59,-13,-28,-15,-18,-19,-20,-21,-22,-23,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-30,-31,-32,]),'MAYOR_IGUAL':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,35,40,43,44,45,60,61,80,82,85,94,95,96,97,98,99,120,122,123,127,128,129,130,131,132,133,134,135,136,141,142,143,],[-55,-56,-16,51,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,51,-55,-56,51,-59,-13,-28,-15,-18,-19,-20,-21,-22,-23,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-30,-31,-32,]),'COMA':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,35,40,44,45,61,77,80,82,85,92,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,120,122,123,127,128,129,130,131,132,133,134,135,136,141,142,143,],[-55,-56,-16,52,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,-55,-56,-59,121,-13,-28,-15,52,-18,-19,-20,-21,-22,-23,124,125,-36,-37,-38,-39,-40,-41,126,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-30,-31,-32,]),'SIMBOLO_SUMA':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,35,40,43,44,45,60,61,77,80,82,83,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,122,123,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,],[-55,-56,-16,53,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,53,-55,-56,53,-59,53,-13,-28,53,-15,53,53,53,53,53,53,53,-18,-19,-20,-21,-22,-23,53,53,53,53,53,53,53,53,53,53,53,53,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,53,53,53,-30,-31,-32,]),'SIMBOLO_DIVICION':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,35,40,43,44,45,60,61,77,80,82,83,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,122,123,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,],[-55,-56,-16,55,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,55,-55,-56,55,-59,55,-13,-28,55,-15,55,55,55,55,55,55,55,55,55,-20,-21,-22,-23,55,55,55,55,55,55,55,55,55,55,55,55,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,55,55,55,-30,-31,-32,]),'SIMBOLO_MULTIPLICACION':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,35,40,43,44,45,60,61,77,80,82,83,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,122,123,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,],[-55,-56,-16,56,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,56,-55,-56,56,-59,56,-13,-28,56,-15,56,56,56,56,56,56,56,56,56,-20,-21,-22,-23,56,56,56,56,56,56,56,56,56,56,56,56,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,56,56,56,-30,-31,-32,]),'SIMBOLO_POTENCIA':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,35,40,43,44,45,60,61,77,80,82,83,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,122,123,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,],[-55,-56,-16,57,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,57,-55,-56,57,-59,57,-13,-28,57,-15,57,57,57,57,57,57,57,57,57,57,57,-22,-23,57,57,57,57,57,57,57,57,57,57,57,57,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,57,57,57,-30,-31,-32,]),'SIMBOLO_MOD':([3,4,7,9,11,26,27,28,29,30,31,32,33,34,35,40,43,44,45,60,61,77,80,82,83,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,120,122,123,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,],[-55,-56,-16,58,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,58,-55,-56,58,-59,58,-13,-28,58,-15,58,58,58,58,58,58,58,58,58,58,58,-22,-23,58,58,58,58,58,58,58,58,58,58,58,58,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,58,58,58,-30,-31,-32,]),'OR':([5,7,11,26,27,28,29,30,31,32,33,34,35,40,42,44,45,59,61,78,79,80,82,84,85,86,87,88,89,90,91,94,95,96,97,98,99,120,122,123,127,128,129,130,131,132,133,134,135,136,141,142,143,],[37,-16,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,37,-55,-56,37,-59,-26,-27,-13,-28,-42,-15,-7,-8,-9,-10,-11,-12,-18,-19,-20,-21,-22,-23,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-30,-31,-32,]),'AND':([5,7,11,26,27,28,29,30,31,32,33,34,35,40,42,44,45,59,61,78,79,80,82,84,85,86,87,88,89,90,91,94,95,96,97,98,99,120,122,123,127,128,129,130,131,132,133,134,135,136,141,142,143,],[38,-16,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,38,-55,-56,38,-59,-26,-27,-13,-28,-42,-15,-7,-8,-9,-10,-11,-12,-18,-19,-20,-21,-22,-23,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-30,-31,-32,]),'DER_PARENTESIS':([7,11,26,27,28,29,30,31,32,33,34,35,39,40,42,43,44,45,59,61,77,78,79,80,81,82,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,110,111,112,113,114,115,116,117,118,119,120,122,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,],[-16,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,80,-1,84,85,-55,-56,-35,-59,-29,-26,-27,-13,122,-28,-42,-15,-7,-8,-9,-10,-11,-12,-18,-19,-20,-21,-22,-23,85,127,128,129,130,131,132,133,134,135,136,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-33,141,142,143,-30,-31,-32,]),'DER_LLAVE':([7,11,26,27,28,29,30,31,32,33,34,35,40,44,45,61,76,77,80,82,83,85,94,95,96,97,98,99,120,122,123,127,128,129,130,131,132,133,134,135,136,137,141,142,143,],[-16,-66,-53,-54,-57,-58,-62,-63,-64,-65,-60,-61,-1,-55,-56,-59,120,-29,-13,-28,123,-15,-18,-19,-20,-21,-22,-23,-34,-24,-25,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-33,-30,-31,-32,]),'INT64':([64,65,],[103,103,]),'FLOAT64':([64,65,],[104,104,]),'NOTHING':([64,65,],[105,105,]),'STRING':([64,65,],[106,106,]),'CHAR':([64,65,],[107,107,]),'BOOL':([64,65,],[108,108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instruccion':([0,],[2,]),'funcion_exp':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[3,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'funcion_exp_param':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[4,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'condicion':([0,8,10,37,38,],[5,42,59,78,79,]),'contenido':([0,52,],[6,93,]),'dato_id':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'expresion':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[9,43,60,61,77,60,60,77,83,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,110,111,112,113,114,115,116,117,118,119,77,138,139,140,]),'dato_numerico':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'dato_booleano':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expresion_id':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array':([0,8,10,12,36,37,38,39,41,46,47,48,49,50,51,52,53,54,55,56,57,58,62,63,66,67,68,69,70,71,72,73,74,75,121,124,125,126,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'array_exp':([7,40,82,],[40,82,82,]),'parametros':([36,39,121,],[76,81,137,]),'tipo':([64,65,],[102,109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('expresion_id -> dato_id array_exp','expresion_id',2,'p_expresion_dato_id_arr','asignacion.py',6),
  ('instruccion -> funcion_exp','instruccion',1,'p_instruccion_funcion','funcion.py',6),
  ('instruccion -> funcion_exp_param','instruccion',1,'p_instruccion_funcion','funcion.py',7),
  ('instruccion -> condicion','instruccion',1,'p_instruccion_condicion','condicion.py',7),
  ('init -> instruccion','init',1,'p_init','init.py',7),
  ('instruccion -> contenido','instruccion',1,'p_instruccion_expresion','print.py',7),
  ('condicion -> expresion MENOR expresion','condicion',3,'p_condicion_arit','condicion.py',13),
  ('condicion -> expresion MAYOR expresion','condicion',3,'p_condicion_arit','condicion.py',14),
  ('condicion -> expresion IGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',15),
  ('condicion -> expresion NOIGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',16),
  ('condicion -> expresion MENOR_IGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',17),
  ('condicion -> expresion MAYOR_IGUAL expresion','condicion',3,'p_condicion_arit','condicion.py',18),
  ('funcion_exp -> dato_id IZQ_PARENTESIS DER_PARENTESIS','funcion_exp',3,'p_funcion_dato','funcion.py',13),
  ('contenido -> expresion','contenido',1,'p_imprimir_contenido','print.py',13),
  ('expresion -> IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',3,'p_expresion_par','expresion.py',14),
  ('expresion_id -> dato_id','expresion_id',1,'p_expresion_dato','asignacion.py',15),
  ('contenido -> expresion COMA contenido','contenido',3,'p_imprimir_contenido_coma','print.py',19),
  ('expresion -> expresion SIMBOLO_SUMA expresion','expresion',3,'p_expresion_binario','expresion.py',20),
  ('expresion -> expresion SIMBOLO_RESTA expresion','expresion',3,'p_expresion_binario','expresion.py',21),
  ('expresion -> expresion SIMBOLO_DIVICION expresion','expresion',3,'p_expresion_binario','expresion.py',22),
  ('expresion -> expresion SIMBOLO_MULTIPLICACION expresion','expresion',3,'p_expresion_binario','expresion.py',23),
  ('expresion -> expresion SIMBOLO_POTENCIA expresion','expresion',3,'p_expresion_binario','expresion.py',24),
  ('expresion -> expresion SIMBOLO_MOD expresion','expresion',3,'p_expresion_binario','expresion.py',25),
  ('funcion_exp_param -> dato_id IZQ_PARENTESIS parametros DER_PARENTESIS','funcion_exp_param',4,'p_funcion_dato_param','funcion.py',22),
  ('array_exp -> IZQ_LLAVE expresion DER_LLAVE','array_exp',3,'p_expresion_arrayExp','asignacion.py',24),
  ('condicion -> condicion OR condicion','condicion',3,'p_condicion_logic','condicion.py',32),
  ('condicion -> condicion AND condicion','condicion',3,'p_condicion_logic','condicion.py',33),
  ('array_exp -> array_exp array_exp','array_exp',2,'p_expresion_arrayExp2','asignacion.py',33),
  ('parametros -> expresion','parametros',1,'p_parametros','funcion.py',36),
  ('expresion -> LOG IZQ_PARENTESIS expresion COMA expresion DER_PARENTESIS','expresion',6,'p_expresion_nativa_binaria','expresion.py',39),
  ('expresion -> TRUNC IZQ_PARENTESIS tipo COMA expresion DER_PARENTESIS','expresion',6,'p_expresion_nativa_binaria','expresion.py',40),
  ('expresion -> PARSE IZQ_PARENTESIS tipo COMA expresion DER_PARENTESIS','expresion',6,'p_expresion_nativa_binaria','expresion.py',41),
  ('parametros -> expresion COMA parametros','parametros',3,'p_parametros_coma','funcion.py',44),
  ('array -> IZQ_LLAVE parametros DER_LLAVE','array',3,'p_expresion_array_param','asignacion.py',45),
  ('condicion -> NOT condicion','condicion',2,'p_condicion_not','condicion.py',47),
  ('tipo -> INT64','tipo',1,'p_expresion_tipo','expresion.py',54),
  ('tipo -> FLOAT64','tipo',1,'p_expresion_tipo','expresion.py',55),
  ('tipo -> NOTHING','tipo',1,'p_expresion_tipo','expresion.py',56),
  ('tipo -> STRING','tipo',1,'p_expresion_tipo','expresion.py',57),
  ('tipo -> CHAR','tipo',1,'p_expresion_tipo','expresion.py',58),
  ('tipo -> BOOL','tipo',1,'p_expresion_tipo','expresion.py',59),
  ('condicion -> IZQ_PARENTESIS condicion DER_PARENTESIS','condicion',3,'p_condicion_par','condicion.py',59),
  ('expresion -> LOG10 IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',65),
  ('expresion -> SIN IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',66),
  ('expresion -> COS IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',67),
  ('expresion -> TAN IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',68),
  ('expresion -> SQRT IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',69),
  ('expresion -> UPPER IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',70),
  ('expresion -> LOWER IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',71),
  ('expresion -> STRING_FUNC IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',72),
  ('expresion -> TYPEOF IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',73),
  ('expresion -> FLOAT IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',4,'p_expresion_nativa','expresion.py',74),
  ('expresion -> dato_numerico','expresion',1,'p_expresion_numerico','expresion.py',86),
  ('expresion -> dato_booleano','expresion',1,'p_expresion_numerico','expresion.py',87),
  ('expresion -> funcion_exp','expresion',1,'p_expresion_numerico','expresion.py',88),
  ('expresion -> funcion_exp_param','expresion',1,'p_expresion_numerico','expresion.py',89),
  ('expresion -> expresion_id','expresion',1,'p_expresion_numerico','expresion.py',90),
  ('expresion -> array','expresion',1,'p_expresion_numerico','expresion.py',91),
  ('expresion -> SIMBOLO_RESTA expresion','expresion',2,'p_expresion_negativo','expresion.py',96),
  ('dato_booleano -> TRUE','dato_booleano',1,'p_expresion_dato_booleano','expresion.py',108),
  ('dato_booleano -> FALSE','dato_booleano',1,'p_expresion_dato_booleano','expresion.py',109),
  ('dato_numerico -> DATO_TIPO_FLOAT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',118),
  ('dato_numerico -> DATO_TIPO_INT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',119),
  ('dato_numerico -> DATO_TIPO_STRING','dato_numerico',1,'p_expresion_dato_string','expresion.py',125),
  ('dato_numerico -> DATO_TIPO_CHAR','dato_numerico',1,'p_expresion_dato_string','expresion.py',126),
  ('dato_id -> ID','dato_id',1,'p_expresion_dato_id','expresion.py',134),
]
