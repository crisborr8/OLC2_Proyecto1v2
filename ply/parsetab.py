
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initleftANDORleftMENORMAYORMENOR_IGUALMAYOR_IGUALIGUALNOIGUALleftSIMBOLO_SUMASIMBOLO_RESTAleftSIMBOLO_MULTIPLICACIONSIMBOLO_DIVICIONrightNEGATIVOAND COMA DATO_TIPO_FLOAT64 DATO_TIPO_INT64 DATO_TIPO_STRING DER_PARENTESIS ELSE END FOR ID IF IGUAL IN IZQ_PARENTESIS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL NOIGUAL NOT OR PRINT PRINTLN PUNTO_COMA PUNTO_PUNTO SALTO SIMBOLO_DIVICION SIMBOLO_IGUAL SIMBOLO_MULTIPLICACION SIMBOLO_RESTA SIMBOLO_SUMA TABULADOR WHILEinstruccion  : asignacioninstruccion  : expresioninstruccion  : forinstruccion  : ifinstruccion  : imprimirinstruccion  : whileinit   : PUNTO_COMAasignacion   : dato_id SIMBOLO_IGUAL expresion PUNTO_COMAfor  : FOR dato_id IN rango instrucciones END PUNTO_COMAif  : IF condicion instrucciones if_thenimprimir   : PRINTLN IZQ_PARENTESIS contenido DER_PARENTESIS PUNTO_COMAwhile  : WHILE condicion instrucciones END PUNTO_COMAexpresion    : IZQ_PARENTESIS expresion DER_PARENTESISinit   : instrucciones PUNTO_COMAexpresion    : expresion SIMBOLO_SUMA expresion\n                    | expresion SIMBOLO_RESTA expresion\n                    | expresion SIMBOLO_DIVICION expresion\n                    | expresion SIMBOLO_MULTIPLICACION expresioninstrucciones    : instruccionif_then  : END PUNTO_COMAimprimir   : PRINT IZQ_PARENTESIS contenido DER_PARENTESIS PUNTO_COMAexpresion  : SIMBOLO_RESTA expresion %prec NEGATIVOinstrucciones    : instruccion instruccionesif_then  : if_else\n                | if_elseifrango    : expresion PUNTO_PUNTO expresionexpresion    : dato_numerico\n                    | dato_idif_elseif  : ELSE IF condicion instrucciones if_thencontenido   : expresiondato_numerico    : DATO_TIPO_FLOAT64\n                        | DATO_TIPO_INT64\n                        | DATO_TIPO_STRINGcontenido   : expresion COMA contenidoif_else  : ELSE instrucciones END PUNTO_COMAdato_id    : IDcondicion    : expresion MENOR expresion\n                    | expresion MAYOR expresion\n                    | expresion IGUAL expresion\n                    | expresion NOIGUAL expresion\n                    | expresion MENOR_IGUAL expresion\n                    | expresion MAYOR_IGUAL expresioncondicion    : condicion OR condicion\n                    | condicion AND condicioncondicion    : NOT condicioncondicion    : IZQ_PARENTESIS condicion DER_PARENTESIS'
    
_lr_action_items = {'PUNTO_COMA':([0,3,4,5,6,7,8,9,10,11,14,20,21,22,23,25,32,33,42,43,44,45,46,47,65,68,69,70,71,82,84,85,88,91,93,94,95,97,99,100,102,],[2,24,-19,-1,-2,-3,-4,-5,-6,-28,-27,-36,-31,-32,-33,-23,-28,-22,-15,-16,-17,-18,65,-13,-8,-10,88,-24,-25,91,93,94,-20,-11,-21,-12,99,100,-9,-35,-29,]),'IZQ_PARENTESIS':([0,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,26,27,28,29,30,32,33,35,37,38,39,40,41,42,43,44,45,47,48,50,51,52,53,54,55,56,57,58,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,87,88,90,91,93,94,96,98,99,100,102,],[12,12,-1,-2,-3,-4,-5,-6,-28,12,12,-27,38,39,40,38,-36,-31,-32,-33,12,12,12,12,12,-28,-22,12,38,38,12,12,12,-15,-16,-17,-18,-13,12,38,38,12,12,12,12,12,12,-45,-8,12,-10,-24,-25,12,-43,-44,-37,-38,-39,-40,-41,-42,-46,12,12,-20,38,-11,-21,-12,-26,12,-9,-35,-10,]),'SIMBOLO_RESTA':([0,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,60,62,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,83,87,88,90,91,93,94,96,98,99,100,102,],[13,13,-1,27,-3,-4,-5,-6,-28,13,13,-27,13,13,-36,-31,-32,-33,13,13,13,13,13,27,-28,-22,13,27,13,13,13,13,13,-15,-16,-17,-18,27,-13,13,13,13,13,13,13,13,13,13,-45,27,27,-8,13,27,-10,-24,-25,13,-43,-44,27,27,27,27,27,27,-46,13,13,-20,13,-11,-21,-12,27,13,-9,-35,-10,]),'FOR':([0,4,5,6,7,8,9,10,11,14,20,21,22,23,32,33,35,41,42,43,44,45,47,58,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,88,91,93,94,96,98,99,100,102,],[15,15,-1,-2,-3,-4,-5,-6,-28,-27,-36,-31,-32,-33,-28,-22,15,15,-15,-16,-17,-18,-13,-45,-8,15,-10,-24,-25,15,-43,-44,-37,-38,-39,-40,-41,-42,-46,-20,-11,-21,-12,-26,15,-9,-35,-10,]),'IF':([0,4,5,6,7,8,9,10,11,14,20,21,22,23,32,33,35,41,42,43,44,45,47,58,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,88,91,93,94,96,98,99,100,102,],[16,16,-1,-2,-3,-4,-5,-6,-28,-27,-36,-31,-32,-33,-28,-22,16,16,-15,-16,-17,-18,-13,-45,-8,16,-10,-24,-25,90,-43,-44,-37,-38,-39,-40,-41,-42,-46,-20,-11,-21,-12,-26,16,-9,-35,-10,]),'PRINTLN':([0,4,5,6,7,8,9,10,11,14,20,21,22,23,32,33,35,41,42,43,44,45,47,58,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,88,91,93,94,96,98,99,100,102,],[17,17,-1,-2,-3,-4,-5,-6,-28,-27,-36,-31,-32,-33,-28,-22,17,17,-15,-16,-17,-18,-13,-45,-8,17,-10,-24,-25,17,-43,-44,-37,-38,-39,-40,-41,-42,-46,-20,-11,-21,-12,-26,17,-9,-35,-10,]),'PRINT':([0,4,5,6,7,8,9,10,11,14,20,21,22,23,32,33,35,41,42,43,44,45,47,58,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,88,91,93,94,96,98,99,100,102,],[18,18,-1,-2,-3,-4,-5,-6,-28,-27,-36,-31,-32,-33,-28,-22,18,18,-15,-16,-17,-18,-13,-45,-8,18,-10,-24,-25,18,-43,-44,-37,-38,-39,-40,-41,-42,-46,-20,-11,-21,-12,-26,18,-9,-35,-10,]),'WHILE':([0,4,5,6,7,8,9,10,11,14,20,21,22,23,32,33,35,41,42,43,44,45,47,58,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,88,91,93,94,96,98,99,100,102,],[19,19,-1,-2,-3,-4,-5,-6,-28,-27,-36,-31,-32,-33,-28,-22,19,19,-15,-16,-17,-18,-13,-45,-8,19,-10,-24,-25,19,-43,-44,-37,-38,-39,-40,-41,-42,-46,-20,-11,-21,-12,-26,19,-9,-35,-10,]),'ID':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,27,28,29,30,32,33,35,37,38,39,40,41,42,43,44,45,47,48,50,51,52,53,54,55,56,57,58,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,87,88,90,91,93,94,96,98,99,100,102,],[20,20,-1,-2,-3,-4,-5,-6,-28,20,20,-27,20,20,20,-36,-31,-32,-33,20,20,20,20,20,-28,-22,20,20,20,20,20,20,-15,-16,-17,-18,-13,20,20,20,20,20,20,20,20,20,-45,-8,20,-10,-24,-25,20,-43,-44,-37,-38,-39,-40,-41,-42,-46,20,20,-20,20,-11,-21,-12,-26,20,-9,-35,-10,]),'DATO_TIPO_FLOAT64':([0,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,26,27,28,29,30,32,33,35,37,38,39,40,41,42,43,44,45,47,48,50,51,52,53,54,55,56,57,58,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,87,88,90,91,93,94,96,98,99,100,102,],[21,21,-1,-2,-3,-4,-5,-6,-28,21,21,-27,21,21,-36,-31,-32,-33,21,21,21,21,21,-28,-22,21,21,21,21,21,21,-15,-16,-17,-18,-13,21,21,21,21,21,21,21,21,21,-45,-8,21,-10,-24,-25,21,-43,-44,-37,-38,-39,-40,-41,-42,-46,21,21,-20,21,-11,-21,-12,-26,21,-9,-35,-10,]),'DATO_TIPO_INT64':([0,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,26,27,28,29,30,32,33,35,37,38,39,40,41,42,43,44,45,47,48,50,51,52,53,54,55,56,57,58,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,87,88,90,91,93,94,96,98,99,100,102,],[22,22,-1,-2,-3,-4,-5,-6,-28,22,22,-27,22,22,-36,-31,-32,-33,22,22,22,22,22,-28,-22,22,22,22,22,22,22,-15,-16,-17,-18,-13,22,22,22,22,22,22,22,22,22,-45,-8,22,-10,-24,-25,22,-43,-44,-37,-38,-39,-40,-41,-42,-46,22,22,-20,22,-11,-21,-12,-26,22,-9,-35,-10,]),'DATO_TIPO_STRING':([0,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,26,27,28,29,30,32,33,35,37,38,39,40,41,42,43,44,45,47,48,50,51,52,53,54,55,56,57,58,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,83,87,88,90,91,93,94,96,98,99,100,102,],[23,23,-1,-2,-3,-4,-5,-6,-28,23,23,-27,23,23,-36,-31,-32,-33,23,23,23,23,23,-28,-22,23,23,23,23,23,23,-15,-16,-17,-18,-13,23,23,23,23,23,23,23,23,23,-45,-8,23,-10,-24,-25,23,-43,-44,-37,-38,-39,-40,-41,-42,-46,23,23,-20,23,-11,-21,-12,-26,23,-9,-35,-10,]),'$end':([1,2,24,],[0,-7,-14,]),'END':([4,5,6,7,8,9,10,11,14,20,21,22,23,25,32,33,42,43,44,45,47,49,64,65,68,70,71,86,88,89,91,93,94,99,100,101,102,],[-19,-1,-2,-3,-4,-5,-6,-28,-27,-36,-31,-32,-33,-23,-28,-22,-15,-16,-17,-18,-13,69,85,-8,-10,-24,-25,95,-20,97,-11,-21,-12,-9,-35,69,-10,]),'ELSE':([4,5,6,7,8,9,10,11,14,20,21,22,23,25,32,33,42,43,44,45,47,49,65,68,70,71,88,91,93,94,99,100,101,102,],[-19,-1,-2,-3,-4,-5,-6,-28,-27,-36,-31,-32,-33,-23,-28,-22,-15,-16,-17,-18,-13,72,-8,-10,-24,-25,-20,-11,-21,-12,-9,-35,72,-29,]),'SIMBOLO_SUMA':([6,11,14,20,21,22,23,31,32,33,36,42,43,44,45,46,47,60,62,67,75,76,77,78,79,80,96,],[26,-28,-27,-36,-31,-32,-33,26,-28,-22,26,-15,-16,-17,-18,26,-13,26,26,26,26,26,26,26,26,26,26,]),'SIMBOLO_DIVICION':([6,11,14,20,21,22,23,31,32,33,36,42,43,44,45,46,47,60,62,67,75,76,77,78,79,80,96,],[28,-28,-27,-36,-31,-32,-33,28,-28,-22,28,28,28,-17,-18,28,-13,28,28,28,28,28,28,28,28,28,28,]),'SIMBOLO_MULTIPLICACION':([6,11,14,20,21,22,23,31,32,33,36,42,43,44,45,46,47,60,62,67,75,76,77,78,79,80,96,],[29,-28,-27,-36,-31,-32,-33,29,-28,-22,29,29,29,-17,-18,29,-13,29,29,29,29,29,29,29,29,29,29,]),'SIMBOLO_IGUAL':([11,20,],[30,-36,]),'DER_PARENTESIS':([14,20,21,22,23,31,32,33,42,43,44,45,47,58,59,60,61,62,63,73,74,75,76,77,78,79,80,81,92,],[-27,-36,-31,-32,-33,47,-28,-22,-15,-16,-17,-18,-13,-45,81,47,82,-30,84,-43,-44,-37,-38,-39,-40,-41,-42,-46,-34,]),'MENOR':([14,20,21,22,23,32,33,36,42,43,44,45,47,60,],[-27,-36,-31,-32,-33,-28,-22,52,-15,-16,-17,-18,-13,52,]),'MAYOR':([14,20,21,22,23,32,33,36,42,43,44,45,47,60,],[-27,-36,-31,-32,-33,-28,-22,53,-15,-16,-17,-18,-13,53,]),'IGUAL':([14,20,21,22,23,32,33,36,42,43,44,45,47,60,],[-27,-36,-31,-32,-33,-28,-22,54,-15,-16,-17,-18,-13,54,]),'NOIGUAL':([14,20,21,22,23,32,33,36,42,43,44,45,47,60,],[-27,-36,-31,-32,-33,-28,-22,55,-15,-16,-17,-18,-13,55,]),'MENOR_IGUAL':([14,20,21,22,23,32,33,36,42,43,44,45,47,60,],[-27,-36,-31,-32,-33,-28,-22,56,-15,-16,-17,-18,-13,56,]),'MAYOR_IGUAL':([14,20,21,22,23,32,33,36,42,43,44,45,47,60,],[-27,-36,-31,-32,-33,-28,-22,57,-15,-16,-17,-18,-13,57,]),'COMA':([14,20,21,22,23,32,33,42,43,44,45,47,62,],[-27,-36,-31,-32,-33,-28,-22,-15,-16,-17,-18,-13,83,]),'PUNTO_PUNTO':([14,20,21,22,23,32,33,42,43,44,45,47,67,],[-27,-36,-31,-32,-33,-28,-22,-15,-16,-17,-18,-13,87,]),'OR':([14,20,21,22,23,32,33,35,41,42,43,44,45,47,58,59,73,74,75,76,77,78,79,80,81,98,],[-27,-36,-31,-32,-33,-28,-22,50,50,-15,-16,-17,-18,-13,50,50,-43,-44,-37,-38,-39,-40,-41,-42,-46,50,]),'AND':([14,20,21,22,23,32,33,35,41,42,43,44,45,47,58,59,73,74,75,76,77,78,79,80,81,98,],[-27,-36,-31,-32,-33,-28,-22,51,51,-15,-16,-17,-18,-13,51,51,-43,-44,-37,-38,-39,-40,-41,-42,-46,51,]),'NOT':([16,19,37,38,50,51,90,],[37,37,37,37,37,37,37,]),'IN':([20,34,],[-36,48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,4,35,41,66,72,98,],[3,25,49,64,86,89,101,]),'instruccion':([0,4,35,41,66,72,98,],[4,4,4,4,4,4,4,]),'asignacion':([0,4,35,41,66,72,98,],[5,5,5,5,5,5,5,]),'expresion':([0,4,12,13,16,19,26,27,28,29,30,35,37,38,39,40,41,48,50,51,52,53,54,55,56,57,66,72,83,87,90,98,],[6,6,31,33,36,36,42,43,44,45,46,6,36,60,62,62,6,67,36,36,75,76,77,78,79,80,6,6,62,96,36,6,]),'for':([0,4,35,41,66,72,98,],[7,7,7,7,7,7,7,]),'if':([0,4,35,41,66,72,98,],[8,8,8,8,8,8,8,]),'imprimir':([0,4,35,41,66,72,98,],[9,9,9,9,9,9,9,]),'while':([0,4,35,41,66,72,98,],[10,10,10,10,10,10,10,]),'dato_id':([0,4,12,13,15,16,19,26,27,28,29,30,35,37,38,39,40,41,48,50,51,52,53,54,55,56,57,66,72,83,87,90,98,],[11,11,32,32,34,32,32,32,32,32,32,32,11,32,32,32,32,11,32,32,32,32,32,32,32,32,32,11,11,32,32,32,11,]),'dato_numerico':([0,4,12,13,16,19,26,27,28,29,30,35,37,38,39,40,41,48,50,51,52,53,54,55,56,57,66,72,83,87,90,98,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'condicion':([16,19,37,38,50,51,90,],[35,41,58,59,73,74,98,]),'contenido':([39,40,83,],[61,63,92,]),'rango':([48,],[66,]),'if_then':([49,101,],[68,102,]),'if_else':([49,101,],[70,70,]),'if_elseif':([49,101,],[71,71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion_asignacion','asignacion.py',6),
  ('instruccion -> expresion','instruccion',1,'p_instruccion_expresion','expresion.py',6),
  ('instruccion -> for','instruccion',1,'p_instruccion_forin','forin.py',6),
  ('instruccion -> if','instruccion',1,'p_instruccion_if','ifelse.py',6),
  ('instruccion -> imprimir','instruccion',1,'p_instruccion_imprimir','print.py',6),
  ('instruccion -> while','instruccion',1,'p_instruccion_while','whileend.py',6),
  ('init -> PUNTO_COMA','init',1,'p_init_vacio','init.py',8),
  ('asignacion -> dato_id SIMBOLO_IGUAL expresion PUNTO_COMA','asignacion',4,'p_asignacion','asignacion.py',12),
  ('for -> FOR dato_id IN rango instrucciones END PUNTO_COMA','for',7,'p_for','forin.py',12),
  ('if -> IF condicion instrucciones if_then','if',4,'p_if','ifelse.py',12),
  ('imprimir -> PRINTLN IZQ_PARENTESIS contenido DER_PARENTESIS PUNTO_COMA','imprimir',5,'p_imprimir_ln','print.py',12),
  ('while -> WHILE condicion instrucciones END PUNTO_COMA','while',5,'p_while','whileend.py',12),
  ('expresion -> IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',3,'p_expresion_par','expresion.py',15),
  ('init -> instrucciones PUNTO_COMA','init',2,'p_init','init.py',16),
  ('expresion -> expresion SIMBOLO_SUMA expresion','expresion',3,'p_expresion_binario','expresion.py',24),
  ('expresion -> expresion SIMBOLO_RESTA expresion','expresion',3,'p_expresion_binario','expresion.py',25),
  ('expresion -> expresion SIMBOLO_DIVICION expresion','expresion',3,'p_expresion_binario','expresion.py',26),
  ('expresion -> expresion SIMBOLO_MULTIPLICACION expresion','expresion',3,'p_expresion_binario','expresion.py',27),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_l1','init.py',25),
  ('if_then -> END PUNTO_COMA','if_then',2,'p_ifthen_end','ifelse.py',28),
  ('imprimir -> PRINT IZQ_PARENTESIS contenido DER_PARENTESIS PUNTO_COMA','imprimir',5,'p_imprimir_','print.py',30),
  ('expresion -> SIMBOLO_RESTA expresion','expresion',2,'p_expresion_negativo','expresion.py',35),
  ('instrucciones -> instruccion instrucciones','instrucciones',2,'p_instrucciones_l2','init.py',35),
  ('if_then -> if_else','if_then',1,'p_ifthen','ifelse.py',36),
  ('if_then -> if_elseif','if_then',1,'p_ifthen','ifelse.py',37),
  ('rango -> expresion PUNTO_PUNTO expresion','rango',3,'p_rango','forin.py',40),
  ('expresion -> dato_numerico','expresion',1,'p_expresion_numerico','expresion.py',43),
  ('expresion -> dato_id','expresion',1,'p_expresion_numerico','expresion.py',44),
  ('if_elseif -> ELSE IF condicion instrucciones if_then','if_elseif',5,'p_ifelseif','ifelse.py',43),
  ('contenido -> expresion','contenido',1,'p_imprimir_contenido','print.py',48),
  ('dato_numerico -> DATO_TIPO_FLOAT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',51),
  ('dato_numerico -> DATO_TIPO_INT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',52),
  ('dato_numerico -> DATO_TIPO_STRING','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',53),
  ('contenido -> expresion COMA contenido','contenido',3,'p_imprimir_contenido_coma','print.py',54),
  ('if_else -> ELSE instrucciones END PUNTO_COMA','if_else',4,'p_ifelse','ifelse.py',60),
  ('dato_id -> ID','dato_id',1,'p_expresion_dato_id','expresion.py',65),
  ('condicion -> expresion MENOR expresion','condicion',3,'p_condicion_arit','ifelse.py',71),
  ('condicion -> expresion MAYOR expresion','condicion',3,'p_condicion_arit','ifelse.py',72),
  ('condicion -> expresion IGUAL expresion','condicion',3,'p_condicion_arit','ifelse.py',73),
  ('condicion -> expresion NOIGUAL expresion','condicion',3,'p_condicion_arit','ifelse.py',74),
  ('condicion -> expresion MENOR_IGUAL expresion','condicion',3,'p_condicion_arit','ifelse.py',75),
  ('condicion -> expresion MAYOR_IGUAL expresion','condicion',3,'p_condicion_arit','ifelse.py',76),
  ('condicion -> condicion OR condicion','condicion',3,'p_condicion_logic','ifelse.py',89),
  ('condicion -> condicion AND condicion','condicion',3,'p_condicion_logic','ifelse.py',90),
  ('condicion -> NOT condicion','condicion',2,'p_condicion_not','ifelse.py',98),
  ('condicion -> IZQ_PARENTESIS condicion DER_PARENTESIS','condicion',3,'p_condicion_par','ifelse.py',106),
]
