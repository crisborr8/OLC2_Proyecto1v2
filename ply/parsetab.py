
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initleftANDORleftMENORMAYORMENOR_IGUALMAYOR_IGUALIGUALNOIGUALleftSIMBOLO_SUMASIMBOLO_RESTAleftSIMBOLO_MULTIPLICACIONSIMBOLO_DIVICIONrightNEGATIVOAND COMA DATO_TIPO_FLOAT64 DATO_TIPO_INT64 DATO_TIPO_STRING DER_PARENTESIS ELSE END FOR FUNCION ID IF IGUAL IN IZQ_PARENTESIS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL NOIGUAL NOT OR PRINT PRINTLN PUNTO_COMA PUNTO_PUNTO SALTO SIMBOLO_DIVICION SIMBOLO_IGUAL SIMBOLO_MULTIPLICACION SIMBOLO_RESTA SIMBOLO_SUMA TABULADOR WHILEinstruccion  : asignacioninstruccion  : expresioninstruccion  : forinstruccion_f  : funcioninstruccion  : ifinstruccion  : imprimirinstruccion  : whileinit   : PUNTO_COMAasignacion   : dato_id SIMBOLO_IGUAL expresion PUNTO_COMAfor  : FOR dato_id IN rango instrucciones END PUNTO_COMAfuncion  : FUNCION dato_id IZQ_PARENTESIS parametros DER_PARENTESIS instrucciones END PUNTO_COMAif  : IF condicion instrucciones if_thenimprimir   : PRINTLN IZQ_PARENTESIS contenido DER_PARENTESIS PUNTO_COMAwhile  : WHILE condicion instrucciones END PUNTO_COMAexpresion    : IZQ_PARENTESIS expresion DER_PARENTESISinit   : instrucciones_f PUNTO_COMAexpresion    : expresion SIMBOLO_SUMA expresion\n                    | expresion SIMBOLO_RESTA expresion\n                    | expresion SIMBOLO_DIVICION expresion\n                    | expresion SIMBOLO_MULTIPLICACION expresioninstrucciones_f    : instruccion_fif_then  : END PUNTO_COMAimprimir   : PRINT IZQ_PARENTESIS contenido DER_PARENTESIS PUNTO_COMAinstrucciones_f    : instruccion_f instrucciones_fexpresion  : SIMBOLO_RESTA expresion %prec NEGATIVOif_then  : if_else\n                | if_elseifrango    : expresion PUNTO_PUNTO expresionfuncion  : FUNCION dato_id IZQ_PARENTESIS DER_PARENTESIS instrucciones END PUNTO_COMAexpresion    : dato_numerico\n                    | dato_id\n                    | funcion_expif_elseif  : ELSE IF condicion instrucciones if_theninstruccion_f    : instruccionescontenido   : expresiondato_numerico    : DATO_TIPO_FLOAT64\n                        | DATO_TIPO_INT64\n                        | DATO_TIPO_STRINGcontenido   : expresion COMA contenidoinstrucciones    : instruccionif_else  : ELSE instrucciones END PUNTO_COMAdato_id    : IDinstruccion  : callfuncioninstrucciones    : instruccion instruccionescondicion    : expresion MENOR expresion\n                    | expresion MAYOR expresion\n                    | expresion IGUAL expresion\n                    | expresion NOIGUAL expresion\n                    | expresion MENOR_IGUAL expresion\n                    | expresion MAYOR_IGUAL expresioncallfuncion    :  funcion_exp PUNTO_COMA\n                      |  funcion_exp_param PUNTO_COMAfuncion_exp    :  dato_id IZQ_PARENTESIS DER_PARENTESIScondicion    : condicion OR condicion\n                    | condicion AND condicionfuncion_exp_param    :  dato_id IZQ_PARENTESIS contenido DER_PARENTESIScondicion    : NOT condicioncondicion    : IZQ_PARENTESIS condicion DER_PARENTESISparametros   : dato_idparametros   : dato_id COMA parametros '
    
_lr_action_items = {'PUNTO_COMA':([0,3,4,5,6,8,10,11,12,13,14,15,16,17,19,20,26,27,28,29,30,32,37,38,39,44,45,54,56,57,60,62,63,64,65,85,86,90,91,92,93,104,105,106,113,116,117,118,121,122,124,126,127,128,129,131,132,],[2,31,-21,-4,-34,-31,-40,-1,-2,-3,-5,-6,-7,-43,-30,45,54,-42,-36,-37,-38,-24,-31,-32,-44,-25,-51,-52,85,-53,-15,-17,-18,-19,-20,-9,-56,-12,113,-26,-27,116,117,118,-22,-13,-23,-14,127,128,129,131,-29,-10,-41,-11,-33,]),'FUNCION':([0,4,5,6,8,10,11,12,13,14,15,16,17,19,20,27,28,29,30,37,38,39,44,45,54,57,60,62,63,64,65,85,90,92,93,113,116,117,118,127,128,129,131,132,],[7,7,-4,-34,-31,-40,-1,-2,-3,-5,-6,-7,-43,-30,-32,-42,-36,-37,-38,-31,-32,-44,-25,-51,-52,-53,-15,-17,-18,-19,-20,-9,-12,-26,-27,-22,-13,-23,-14,-29,-10,-41,-11,-33,]),'IZQ_PARENTESIS':([0,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,27,28,29,30,33,34,35,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,57,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,84,85,87,88,90,92,93,94,95,96,97,98,99,100,101,102,103,108,112,113,115,116,117,118,123,125,127,128,129,131,132,],[9,9,-4,-34,35,9,9,-1,-2,-3,-5,-6,-7,-43,9,-30,-32,50,51,52,50,-42,-36,-37,-38,55,9,9,61,-32,-44,9,9,9,9,-25,-51,9,50,50,9,9,9,-52,-53,-15,-17,-18,-19,-20,9,50,50,9,9,9,9,9,9,-57,9,-9,9,9,-12,-26,-27,9,-54,-55,-45,-46,-47,-48,-49,-50,-58,9,9,-22,50,-13,-23,-14,-28,9,-29,-10,-41,-11,-12,]),'SIMBOLO_RESTA':([0,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,27,28,29,30,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,56,57,59,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,78,84,85,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,108,112,113,115,116,117,118,123,125,127,128,129,131,132,],[18,18,-4,-34,-31,18,18,-1,41,-3,-5,-6,-7,-43,18,-30,-32,18,18,-42,-36,-37,-38,18,18,41,-31,-32,-44,18,18,18,18,-25,-51,18,41,18,18,18,18,18,-52,41,-53,41,-15,-17,-18,-19,-20,18,18,18,18,18,18,18,18,18,-57,41,18,-9,18,18,41,-12,-26,-27,18,-54,-55,41,41,41,41,41,41,-58,18,18,-22,18,-13,-23,-14,41,18,-29,-10,-41,-11,-12,]),'FOR':([0,4,5,6,8,10,11,12,13,14,15,16,17,19,20,27,28,29,30,37,38,39,44,45,47,53,54,57,60,62,63,64,65,76,84,85,88,90,92,93,94,95,96,97,98,99,100,101,102,103,108,113,116,117,118,123,125,127,128,129,131,132,],[21,21,-4,-34,-31,21,-1,-2,-3,-5,-6,-7,-43,-30,-32,-42,-36,-37,-38,-31,-32,-44,-25,-51,21,21,-52,-53,-15,-17,-18,-19,-20,-57,21,-9,21,-12,-26,-27,21,-54,-55,-45,-46,-47,-48,-49,-50,-58,21,-22,-13,-23,-14,-28,21,-29,-10,-41,-11,-12,]),'IF':([0,4,5,6,8,10,11,12,13,14,15,16,17,19,20,27,28,29,30,37,38,39,44,45,47,53,54,57,60,62,63,64,65,76,84,85,88,90,92,93,94,95,96,97,98,99,100,101,102,103,108,113,116,117,118,123,125,127,128,129,131,132,],[22,22,-4,-34,-31,22,-1,-2,-3,-5,-6,-7,-43,-30,-32,-42,-36,-37,-38,-31,-32,-44,-25,-51,22,22,-52,-53,-15,-17,-18,-19,-20,-57,22,-9,22,-12,-26,-27,115,-54,-55,-45,-46,-47,-48,-49,-50,-58,22,-22,-13,-23,-14,-28,22,-29,-10,-41,-11,-12,]),'PRINTLN':([0,4,5,6,8,10,11,12,13,14,15,16,17,19,20,27,28,29,30,37,38,39,44,45,47,53,54,57,60,62,63,64,65,76,84,85,88,90,92,93,94,95,96,97,98,99,100,101,102,103,108,113,116,117,118,123,125,127,128,129,131,132,],[23,23,-4,-34,-31,23,-1,-2,-3,-5,-6,-7,-43,-30,-32,-42,-36,-37,-38,-31,-32,-44,-25,-51,23,23,-52,-53,-15,-17,-18,-19,-20,-57,23,-9,23,-12,-26,-27,23,-54,-55,-45,-46,-47,-48,-49,-50,-58,23,-22,-13,-23,-14,-28,23,-29,-10,-41,-11,-12,]),'PRINT':([0,4,5,6,8,10,11,12,13,14,15,16,17,19,20,27,28,29,30,37,38,39,44,45,47,53,54,57,60,62,63,64,65,76,84,85,88,90,92,93,94,95,96,97,98,99,100,101,102,103,108,113,116,117,118,123,125,127,128,129,131,132,],[24,24,-4,-34,-31,24,-1,-2,-3,-5,-6,-7,-43,-30,-32,-42,-36,-37,-38,-31,-32,-44,-25,-51,24,24,-52,-53,-15,-17,-18,-19,-20,-57,24,-9,24,-12,-26,-27,24,-54,-55,-45,-46,-47,-48,-49,-50,-58,24,-22,-13,-23,-14,-28,24,-29,-10,-41,-11,-12,]),'WHILE':([0,4,5,6,8,10,11,12,13,14,15,16,17,19,20,27,28,29,30,37,38,39,44,45,47,53,54,57,60,62,63,64,65,76,84,85,88,90,92,93,94,95,96,97,98,99,100,101,102,103,108,113,116,117,118,123,125,127,128,129,131,132,],[25,25,-4,-34,-31,25,-1,-2,-3,-5,-6,-7,-43,-30,-32,-42,-36,-37,-38,-31,-32,-44,-25,-51,25,25,-52,-53,-15,-17,-18,-19,-20,-57,25,-9,25,-12,-26,-27,25,-54,-55,-45,-46,-47,-48,-49,-50,-58,25,-22,-13,-23,-14,-28,25,-29,-10,-41,-11,-12,]),'ID':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,27,28,29,30,34,35,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,57,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,84,85,87,88,90,92,93,94,95,96,97,98,99,100,101,102,103,107,108,112,113,115,116,117,118,123,125,127,128,129,131,132,],[27,27,-4,-34,27,-31,27,27,-1,-2,-3,-5,-6,-7,-43,27,-30,-32,27,27,27,-42,-36,-37,-38,27,27,-31,-32,-44,27,27,27,27,-25,-51,27,27,27,27,27,27,-52,27,-53,-15,-17,-18,-19,-20,27,27,27,27,27,27,27,27,27,-57,27,-9,27,27,-12,-26,-27,27,-54,-55,-45,-46,-47,-48,-49,-50,-58,27,27,27,-22,27,-13,-23,-14,-28,27,-29,-10,-41,-11,-12,]),'DATO_TIPO_FLOAT64':([0,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,27,28,29,30,34,35,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,57,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,84,85,87,88,90,92,93,94,95,96,97,98,99,100,101,102,103,108,112,113,115,116,117,118,123,125,127,128,129,131,132,],[28,28,-4,-34,-31,28,28,-1,-2,-3,-5,-6,-7,-43,28,-30,-32,28,28,-42,-36,-37,-38,28,28,-31,-32,-44,28,28,28,28,-25,-51,28,28,28,28,28,28,-52,-53,-15,-17,-18,-19,-20,28,28,28,28,28,28,28,28,28,-57,28,-9,28,28,-12,-26,-27,28,-54,-55,-45,-46,-47,-48,-49,-50,-58,28,28,-22,28,-13,-23,-14,-28,28,-29,-10,-41,-11,-12,]),'DATO_TIPO_INT64':([0,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,27,28,29,30,34,35,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,57,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,84,85,87,88,90,92,93,94,95,96,97,98,99,100,101,102,103,108,112,113,115,116,117,118,123,125,127,128,129,131,132,],[29,29,-4,-34,-31,29,29,-1,-2,-3,-5,-6,-7,-43,29,-30,-32,29,29,-42,-36,-37,-38,29,29,-31,-32,-44,29,29,29,29,-25,-51,29,29,29,29,29,29,-52,-53,-15,-17,-18,-19,-20,29,29,29,29,29,29,29,29,29,-57,29,-9,29,29,-12,-26,-27,29,-54,-55,-45,-46,-47,-48,-49,-50,-58,29,29,-22,29,-13,-23,-14,-28,29,-29,-10,-41,-11,-12,]),'DATO_TIPO_STRING':([0,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,27,28,29,30,34,35,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,57,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,84,85,87,88,90,92,93,94,95,96,97,98,99,100,101,102,103,108,112,113,115,116,117,118,123,125,127,128,129,131,132,],[30,30,-4,-34,-31,30,30,-1,-2,-3,-5,-6,-7,-43,30,-30,-32,30,30,-42,-36,-37,-38,30,30,-31,-32,-44,30,30,30,30,-25,-51,30,30,30,30,30,30,-52,-53,-15,-17,-18,-19,-20,30,30,30,30,30,30,30,30,30,-57,30,-9,30,30,-12,-26,-27,30,-54,-55,-45,-46,-47,-48,-49,-50,-58,30,30,-22,30,-13,-23,-14,-28,30,-29,-10,-41,-11,-12,]),'$end':([1,2,31,],[0,-8,-16,]),'SIMBOLO_IGUAL':([8,27,],[34,-42,]),'SIMBOLO_SUMA':([8,12,19,20,27,28,29,30,36,37,38,44,48,56,57,59,60,62,63,64,65,78,89,97,98,99,100,101,102,123,],[-31,40,-30,-32,-42,-36,-37,-38,40,-31,-32,-25,40,40,-53,40,-15,-17,-18,-19,-20,40,40,40,40,40,40,40,40,40,]),'SIMBOLO_DIVICION':([8,12,19,20,27,28,29,30,36,37,38,44,48,56,57,59,60,62,63,64,65,78,89,97,98,99,100,101,102,123,],[-31,42,-30,-32,-42,-36,-37,-38,42,-31,-32,-25,42,42,-53,42,-15,42,42,-19,-20,42,42,42,42,42,42,42,42,42,]),'SIMBOLO_MULTIPLICACION':([8,12,19,20,27,28,29,30,36,37,38,44,48,56,57,59,60,62,63,64,65,78,89,97,98,99,100,101,102,123,],[-31,43,-30,-32,-42,-36,-37,-38,43,-31,-32,-25,43,43,-53,43,-15,43,43,-19,-20,43,43,43,43,43,43,43,43,43,]),'END':([8,10,11,12,13,14,15,16,17,19,20,27,28,29,30,37,38,39,44,45,54,57,60,62,63,64,65,67,81,85,90,92,93,109,111,113,114,116,117,118,120,128,129,130,132,],[-31,-40,-1,-2,-3,-5,-6,-7,-43,-30,-32,-42,-36,-37,-38,-31,-32,-44,-25,-51,-52,-53,-15,-17,-18,-19,-20,91,106,-9,-12,-26,-27,121,122,-22,124,-13,-23,-14,126,-10,-41,91,-12,]),'ELSE':([8,10,11,12,13,14,15,16,17,19,20,27,28,29,30,37,38,39,44,45,54,57,60,62,63,64,65,67,85,90,92,93,113,116,117,118,128,129,130,132,],[-31,-40,-1,-2,-3,-5,-6,-7,-43,-30,-32,-42,-36,-37,-38,-31,-32,-44,-25,-51,-52,-53,-15,-17,-18,-19,-20,94,-9,-12,-26,-27,-22,-13,-23,-14,-10,-41,94,-33,]),'DER_PARENTESIS':([19,27,28,29,30,35,36,37,38,44,55,57,58,59,60,61,62,63,64,65,76,77,78,79,80,82,83,95,96,97,98,99,100,101,102,103,110,119,],[-30,-42,-36,-37,-38,57,60,-31,-32,-25,84,-53,86,-35,-15,57,-17,-18,-19,-20,-57,103,60,104,105,-59,108,-54,-55,-45,-46,-47,-48,-49,-50,-58,-39,-60,]),'MENOR':([19,27,28,29,30,37,38,44,48,57,60,62,63,64,65,78,],[-30,-42,-36,-37,-38,-31,-32,-25,70,-53,-15,-17,-18,-19,-20,70,]),'MAYOR':([19,27,28,29,30,37,38,44,48,57,60,62,63,64,65,78,],[-30,-42,-36,-37,-38,-31,-32,-25,71,-53,-15,-17,-18,-19,-20,71,]),'IGUAL':([19,27,28,29,30,37,38,44,48,57,60,62,63,64,65,78,],[-30,-42,-36,-37,-38,-31,-32,-25,72,-53,-15,-17,-18,-19,-20,72,]),'NOIGUAL':([19,27,28,29,30,37,38,44,48,57,60,62,63,64,65,78,],[-30,-42,-36,-37,-38,-31,-32,-25,73,-53,-15,-17,-18,-19,-20,73,]),'MENOR_IGUAL':([19,27,28,29,30,37,38,44,48,57,60,62,63,64,65,78,],[-30,-42,-36,-37,-38,-31,-32,-25,74,-53,-15,-17,-18,-19,-20,74,]),'MAYOR_IGUAL':([19,27,28,29,30,37,38,44,48,57,60,62,63,64,65,78,],[-30,-42,-36,-37,-38,-31,-32,-25,75,-53,-15,-17,-18,-19,-20,75,]),'COMA':([19,27,28,29,30,37,38,44,57,59,60,62,63,64,65,82,],[-30,-42,-36,-37,-38,-31,-32,-25,-53,87,-15,-17,-18,-19,-20,107,]),'PUNTO_PUNTO':([19,27,28,29,30,37,38,44,57,60,62,63,64,65,89,],[-30,-42,-36,-37,-38,-31,-32,-25,-53,-15,-17,-18,-19,-20,112,]),'OR':([19,27,28,29,30,37,38,44,47,53,57,60,62,63,64,65,76,77,95,96,97,98,99,100,101,102,103,125,],[-30,-42,-36,-37,-38,-31,-32,-25,68,68,-53,-15,-17,-18,-19,-20,68,68,-54,-55,-45,-46,-47,-48,-49,-50,-58,68,]),'AND':([19,27,28,29,30,37,38,44,47,53,57,60,62,63,64,65,76,77,95,96,97,98,99,100,101,102,103,125,],[-30,-42,-36,-37,-38,-31,-32,-25,69,69,-53,-15,-17,-18,-19,-20,69,69,-54,-55,-45,-46,-47,-48,-49,-50,-58,69,]),'NOT':([22,25,49,50,68,69,115,],[49,49,49,49,49,49,49,]),'IN':([27,46,],[-42,66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones_f':([0,4,],[3,32,]),'instruccion_f':([0,4,],[4,4,]),'funcion':([0,4,],[5,5,]),'instrucciones':([0,4,10,47,53,84,88,94,108,125,],[6,6,39,67,81,109,111,114,120,130,]),'dato_id':([0,4,7,9,10,18,21,22,25,34,35,40,41,42,43,47,49,50,51,52,53,55,66,68,69,70,71,72,73,74,75,84,87,88,94,107,108,112,115,125,],[8,8,33,37,8,37,46,37,37,37,37,37,37,37,37,8,37,37,37,37,8,82,37,37,37,37,37,37,37,37,37,8,37,8,8,82,8,37,37,8,]),'instruccion':([0,4,10,47,53,84,88,94,108,125,],[10,10,10,10,10,10,10,10,10,10,]),'asignacion':([0,4,10,47,53,84,88,94,108,125,],[11,11,11,11,11,11,11,11,11,11,]),'expresion':([0,4,9,10,18,22,25,34,35,40,41,42,43,47,49,50,51,52,53,66,68,69,70,71,72,73,74,75,84,87,88,94,108,112,115,125,],[12,12,36,12,44,48,48,56,59,62,63,64,65,12,48,78,59,59,12,89,48,48,97,98,99,100,101,102,12,59,12,12,12,123,48,12,]),'for':([0,4,10,47,53,84,88,94,108,125,],[13,13,13,13,13,13,13,13,13,13,]),'if':([0,4,10,47,53,84,88,94,108,125,],[14,14,14,14,14,14,14,14,14,14,]),'imprimir':([0,4,10,47,53,84,88,94,108,125,],[15,15,15,15,15,15,15,15,15,15,]),'while':([0,4,10,47,53,84,88,94,108,125,],[16,16,16,16,16,16,16,16,16,16,]),'callfuncion':([0,4,10,47,53,84,88,94,108,125,],[17,17,17,17,17,17,17,17,17,17,]),'dato_numerico':([0,4,9,10,18,22,25,34,35,40,41,42,43,47,49,50,51,52,53,66,68,69,70,71,72,73,74,75,84,87,88,94,108,112,115,125,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'funcion_exp':([0,4,9,10,18,22,25,34,35,40,41,42,43,47,49,50,51,52,53,66,68,69,70,71,72,73,74,75,84,87,88,94,108,112,115,125,],[20,20,38,20,38,38,38,38,38,38,38,38,38,20,38,38,38,38,20,38,38,38,38,38,38,38,38,38,20,38,20,20,20,38,38,20,]),'funcion_exp_param':([0,4,10,47,53,84,88,94,108,125,],[26,26,26,26,26,26,26,26,26,26,]),'condicion':([22,25,49,50,68,69,115,],[47,53,76,77,95,96,125,]),'contenido':([35,51,52,87,],[58,79,80,110,]),'parametros':([55,107,],[83,119,]),'rango':([66,],[88,]),'if_then':([67,130,],[90,132,]),'if_else':([67,130,],[92,92,]),'if_elseif':([67,130,],[93,93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion_asignacion','asignacion.py',6),
  ('instruccion -> expresion','instruccion',1,'p_instruccion_expresion','expresion.py',6),
  ('instruccion -> for','instruccion',1,'p_instruccion_forin','forin.py',6),
  ('instruccion_f -> funcion','instruccion_f',1,'p_instruccion_funcion','funcion.py',6),
  ('instruccion -> if','instruccion',1,'p_instruccion_if','ifelse.py',6),
  ('instruccion -> imprimir','instruccion',1,'p_instruccion_imprimir','print.py',6),
  ('instruccion -> while','instruccion',1,'p_instruccion_while','whileend.py',6),
  ('init -> PUNTO_COMA','init',1,'p_init_vacio','init.py',8),
  ('asignacion -> dato_id SIMBOLO_IGUAL expresion PUNTO_COMA','asignacion',4,'p_asignacion','asignacion.py',12),
  ('for -> FOR dato_id IN rango instrucciones END PUNTO_COMA','for',7,'p_for','forin.py',12),
  ('funcion -> FUNCION dato_id IZQ_PARENTESIS parametros DER_PARENTESIS instrucciones END PUNTO_COMA','funcion',8,'p_funcion_param','funcion.py',12),
  ('if -> IF condicion instrucciones if_then','if',4,'p_if','ifelse.py',12),
  ('imprimir -> PRINTLN IZQ_PARENTESIS contenido DER_PARENTESIS PUNTO_COMA','imprimir',5,'p_imprimir_ln','print.py',12),
  ('while -> WHILE condicion instrucciones END PUNTO_COMA','while',5,'p_while','whileend.py',12),
  ('expresion -> IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',3,'p_expresion_par','expresion.py',15),
  ('init -> instrucciones_f PUNTO_COMA','init',2,'p_init','init.py',16),
  ('expresion -> expresion SIMBOLO_SUMA expresion','expresion',3,'p_expresion_binario','expresion.py',24),
  ('expresion -> expresion SIMBOLO_RESTA expresion','expresion',3,'p_expresion_binario','expresion.py',25),
  ('expresion -> expresion SIMBOLO_DIVICION expresion','expresion',3,'p_expresion_binario','expresion.py',26),
  ('expresion -> expresion SIMBOLO_MULTIPLICACION expresion','expresion',3,'p_expresion_binario','expresion.py',27),
  ('instrucciones_f -> instruccion_f','instrucciones_f',1,'p_instrucciones_f_l1','init.py',25),
  ('if_then -> END PUNTO_COMA','if_then',2,'p_ifthen_end','ifelse.py',28),
  ('imprimir -> PRINT IZQ_PARENTESIS contenido DER_PARENTESIS PUNTO_COMA','imprimir',5,'p_imprimir_','print.py',30),
  ('instrucciones_f -> instruccion_f instrucciones_f','instrucciones_f',2,'p_instrucciones_f_l2','init.py',34),
  ('expresion -> SIMBOLO_RESTA expresion','expresion',2,'p_expresion_negativo','expresion.py',35),
  ('if_then -> if_else','if_then',1,'p_ifthen','ifelse.py',36),
  ('if_then -> if_elseif','if_then',1,'p_ifthen','ifelse.py',37),
  ('rango -> expresion PUNTO_PUNTO expresion','rango',3,'p_rango','forin.py',40),
  ('funcion -> FUNCION dato_id IZQ_PARENTESIS DER_PARENTESIS instrucciones END PUNTO_COMA','funcion',7,'p_funcion','funcion.py',40),
  ('expresion -> dato_numerico','expresion',1,'p_expresion_numerico','expresion.py',43),
  ('expresion -> dato_id','expresion',1,'p_expresion_numerico','expresion.py',44),
  ('expresion -> funcion_exp','expresion',1,'p_expresion_numerico','expresion.py',45),
  ('if_elseif -> ELSE IF condicion instrucciones if_then','if_elseif',5,'p_ifelseif','ifelse.py',43),
  ('instruccion_f -> instrucciones','instruccion_f',1,'p_instrucciones_f_l3','init.py',46),
  ('contenido -> expresion','contenido',1,'p_imprimir_contenido','print.py',48),
  ('dato_numerico -> DATO_TIPO_FLOAT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',52),
  ('dato_numerico -> DATO_TIPO_INT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',53),
  ('dato_numerico -> DATO_TIPO_STRING','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',54),
  ('contenido -> expresion COMA contenido','contenido',3,'p_imprimir_contenido_coma','print.py',54),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_l1','init.py',57),
  ('if_else -> ELSE instrucciones END PUNTO_COMA','if_else',4,'p_ifelse','ifelse.py',60),
  ('dato_id -> ID','dato_id',1,'p_expresion_dato_id','expresion.py',66),
  ('instruccion -> callfuncion','instruccion',1,'p_instruccion_callfuncion','funcion.py',66),
  ('instrucciones -> instruccion instrucciones','instrucciones',2,'p_instrucciones_l2','init.py',67),
  ('condicion -> expresion MENOR expresion','condicion',3,'p_condicion_arit','ifelse.py',71),
  ('condicion -> expresion MAYOR expresion','condicion',3,'p_condicion_arit','ifelse.py',72),
  ('condicion -> expresion IGUAL expresion','condicion',3,'p_condicion_arit','ifelse.py',73),
  ('condicion -> expresion NOIGUAL expresion','condicion',3,'p_condicion_arit','ifelse.py',74),
  ('condicion -> expresion MENOR_IGUAL expresion','condicion',3,'p_condicion_arit','ifelse.py',75),
  ('condicion -> expresion MAYOR_IGUAL expresion','condicion',3,'p_condicion_arit','ifelse.py',76),
  ('callfuncion -> funcion_exp PUNTO_COMA','callfuncion',2,'p_funcion_callfuncion','funcion.py',75),
  ('callfuncion -> funcion_exp_param PUNTO_COMA','callfuncion',2,'p_funcion_callfuncion','funcion.py',76),
  ('funcion_exp -> dato_id IZQ_PARENTESIS DER_PARENTESIS','funcion_exp',3,'p_funcion_exp','funcion.py',84),
  ('condicion -> condicion OR condicion','condicion',3,'p_condicion_logic','ifelse.py',89),
  ('condicion -> condicion AND condicion','condicion',3,'p_condicion_logic','ifelse.py',90),
  ('funcion_exp_param -> dato_id IZQ_PARENTESIS contenido DER_PARENTESIS','funcion_exp_param',4,'p_funcion_exp_param','funcion.py',96),
  ('condicion -> NOT condicion','condicion',2,'p_condicion_not','ifelse.py',98),
  ('condicion -> IZQ_PARENTESIS condicion DER_PARENTESIS','condicion',3,'p_condicion_par','ifelse.py',106),
  ('parametros -> dato_id','parametros',1,'p_parametros','funcion.py',109),
  ('parametros -> dato_id COMA parametros','parametros',3,'p_parametros_coma','funcion.py',116),
]
