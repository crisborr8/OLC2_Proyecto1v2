
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initleftANDORleftMENORMAYORMENOR_IGUALMAYOR_IGUALIGUALNOIGUALleftSIMBOLO_SUMASIMBOLO_RESTAleftSIMBOLO_MULTIPLICACIONSIMBOLO_DIVICIONAND DATO_TIPO_FLOAT64 DATO_TIPO_INT64 DATO_TIPO_STRING DER_PARENTESIS ELSE END FOR ID IF IGUAL IN IZQ_PARENTESIS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL NOIGUAL NOT OR PRINT PRINTLN PUNTO_COMA PUNTO_PUNTO SALTO SIMBOLO_DIVICION SIMBOLO_IGUAL SIMBOLO_MULTIPLICACION SIMBOLO_RESTA SIMBOLO_SUMA TABULADORinstruccion  : asignacioninstruccion  : expresioninstruccion  : ifinstruccion  : imprimirinit   : PUNTO_COMAasignacion   : dato_id SIMBOLO_IGUAL expresion PUNTO_COMAif  : IF condicion instrucciones if_thenimprimir   : PRINTLN IZQ_PARENTESIS contenido DER_PARENTESIS PUNTO_COMAexpresion    : IZQ_PARENTESIS expresion DER_PARENTESISinit   : instrucciones PUNTO_COMAexpresion    : expresion SIMBOLO_SUMA expresion\n                    | expresion SIMBOLO_RESTA expresion\n                    | expresion SIMBOLO_DIVICION expresion\n                    | expresion SIMBOLO_MULTIPLICACION expresioninstrucciones    : instruccionif_then  : END PUNTO_COMAimprimir   : PRINT IZQ_PARENTESIS contenido DER_PARENTESIS PUNTO_COMAexpresion    : dato_numerico\n                    | dato_idinstrucciones    : instruccion instruccionesif_then  : if_else\n                | if_elseifdato_numerico    : DATO_TIPO_FLOAT64\n                        | DATO_TIPO_INT64\n                        | DATO_TIPO_STRINGif_elseif  : ELSE IF condicion instrucciones if_thencontenido   : expresiondato_id    : IDif_else  : ELSE instrucciones END PUNTO_COMAcondicion    : expresion MENOR expresion\n                    | expresion MAYOR expresion\n                    | expresion IGUAL expresion\n                    | expresion NOIGUAL expresion\n                    | expresion MENOR_IGUAL expresion\n                    | expresion MAYOR_IGUAL expresioncondicion    : condicion OR condicion\n                    | condicion AND condicioncondicion    : NOT condicioncondicion    : IZQ_PARENTESIS condicion DER_PARENTESIS'
    
_lr_action_items = {'PUNTO_COMA':([0,3,4,5,6,7,8,9,11,15,16,17,18,20,27,34,35,36,37,38,39,55,56,57,58,59,70,71,72,75,76,77,79,81,],[2,19,-15,-1,-2,-3,-4,-19,-18,-28,-23,-24,-25,-20,-19,-11,-12,-13,-14,55,-9,-6,-7,72,-21,-22,75,76,-16,-8,-17,79,-29,-26,]),'IZQ_PARENTESIS':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,27,28,30,31,32,33,34,35,36,37,39,41,42,43,44,45,46,47,48,49,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,74,75,76,78,79,81,],[10,10,-1,-2,-3,-4,-19,10,-18,31,32,33,-28,-23,-24,-25,10,10,10,10,10,-19,10,31,31,10,10,-11,-12,-13,-14,-9,31,31,10,10,10,10,10,10,-38,-6,-7,-21,-22,10,-36,-37,-30,-31,-32,-33,-34,-35,-39,-16,31,-8,-17,10,-29,-7,]),'IF':([0,4,5,6,7,8,9,11,15,16,17,18,27,28,34,35,36,37,39,49,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,78,79,81,],[12,12,-1,-2,-3,-4,-19,-18,-28,-23,-24,-25,-19,12,-11,-12,-13,-14,-9,-38,-6,-7,-21,-22,74,-36,-37,-30,-31,-32,-33,-34,-35,-39,-16,-8,-17,12,-29,-7,]),'PRINTLN':([0,4,5,6,7,8,9,11,15,16,17,18,27,28,34,35,36,37,39,49,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,78,79,81,],[13,13,-1,-2,-3,-4,-19,-18,-28,-23,-24,-25,-19,13,-11,-12,-13,-14,-9,-38,-6,-7,-21,-22,13,-36,-37,-30,-31,-32,-33,-34,-35,-39,-16,-8,-17,13,-29,-7,]),'PRINT':([0,4,5,6,7,8,9,11,15,16,17,18,27,28,34,35,36,37,39,49,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,78,79,81,],[14,14,-1,-2,-3,-4,-19,-18,-28,-23,-24,-25,-19,14,-11,-12,-13,-14,-9,-38,-6,-7,-21,-22,14,-36,-37,-30,-31,-32,-33,-34,-35,-39,-16,-8,-17,14,-29,-7,]),'ID':([0,4,5,6,7,8,9,10,11,12,15,16,17,18,21,22,23,24,25,27,28,30,31,32,33,34,35,36,37,39,41,42,43,44,45,46,47,48,49,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,74,75,76,78,79,81,],[15,15,-1,-2,-3,-4,-19,15,-18,15,-28,-23,-24,-25,15,15,15,15,15,-19,15,15,15,15,15,-11,-12,-13,-14,-9,15,15,15,15,15,15,15,15,-38,-6,-7,-21,-22,15,-36,-37,-30,-31,-32,-33,-34,-35,-39,-16,15,-8,-17,15,-29,-7,]),'DATO_TIPO_FLOAT64':([0,4,5,6,7,8,9,10,11,12,15,16,17,18,21,22,23,24,25,27,28,30,31,32,33,34,35,36,37,39,41,42,43,44,45,46,47,48,49,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,74,75,76,78,79,81,],[16,16,-1,-2,-3,-4,-19,16,-18,16,-28,-23,-24,-25,16,16,16,16,16,-19,16,16,16,16,16,-11,-12,-13,-14,-9,16,16,16,16,16,16,16,16,-38,-6,-7,-21,-22,16,-36,-37,-30,-31,-32,-33,-34,-35,-39,-16,16,-8,-17,16,-29,-7,]),'DATO_TIPO_INT64':([0,4,5,6,7,8,9,10,11,12,15,16,17,18,21,22,23,24,25,27,28,30,31,32,33,34,35,36,37,39,41,42,43,44,45,46,47,48,49,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,74,75,76,78,79,81,],[17,17,-1,-2,-3,-4,-19,17,-18,17,-28,-23,-24,-25,17,17,17,17,17,-19,17,17,17,17,17,-11,-12,-13,-14,-9,17,17,17,17,17,17,17,17,-38,-6,-7,-21,-22,17,-36,-37,-30,-31,-32,-33,-34,-35,-39,-16,17,-8,-17,17,-29,-7,]),'DATO_TIPO_STRING':([0,4,5,6,7,8,9,10,11,12,15,16,17,18,21,22,23,24,25,27,28,30,31,32,33,34,35,36,37,39,41,42,43,44,45,46,47,48,49,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,74,75,76,78,79,81,],[18,18,-1,-2,-3,-4,-19,18,-18,18,-28,-23,-24,-25,18,18,18,18,18,-19,18,18,18,18,18,-11,-12,-13,-14,-9,18,18,18,18,18,18,18,18,-38,-6,-7,-21,-22,18,-36,-37,-30,-31,-32,-33,-34,-35,-39,-16,18,-8,-17,18,-29,-7,]),'$end':([1,2,19,],[0,-5,-10,]),'END':([4,5,6,7,8,9,11,15,16,17,18,20,27,34,35,36,37,39,40,55,56,58,59,72,73,75,76,79,80,81,],[-15,-1,-2,-3,-4,-19,-18,-28,-23,-24,-25,-20,-19,-11,-12,-13,-14,-9,57,-6,-7,-21,-22,-16,77,-8,-17,-29,57,-7,]),'ELSE':([4,5,6,7,8,9,11,15,16,17,18,20,27,34,35,36,37,39,40,55,56,58,59,72,75,76,79,80,81,],[-15,-1,-2,-3,-4,-19,-18,-28,-23,-24,-25,-20,-19,-11,-12,-13,-14,-9,60,-6,-7,-21,-22,-16,-8,-17,-29,60,-26,]),'SIMBOLO_SUMA':([6,9,11,15,16,17,18,26,27,29,34,35,36,37,38,39,51,53,63,64,65,66,67,68,],[21,-19,-18,-28,-23,-24,-25,21,-19,21,-11,-12,-13,-14,21,-9,21,21,21,21,21,21,21,21,]),'SIMBOLO_RESTA':([6,9,11,15,16,17,18,26,27,29,34,35,36,37,38,39,51,53,63,64,65,66,67,68,],[22,-19,-18,-28,-23,-24,-25,22,-19,22,-11,-12,-13,-14,22,-9,22,22,22,22,22,22,22,22,]),'SIMBOLO_DIVICION':([6,9,11,15,16,17,18,26,27,29,34,35,36,37,38,39,51,53,63,64,65,66,67,68,],[23,-19,-18,-28,-23,-24,-25,23,-19,23,23,23,-13,-14,23,-9,23,23,23,23,23,23,23,23,]),'SIMBOLO_MULTIPLICACION':([6,9,11,15,16,17,18,26,27,29,34,35,36,37,38,39,51,53,63,64,65,66,67,68,],[24,-19,-18,-28,-23,-24,-25,24,-19,24,24,24,-13,-14,24,-9,24,24,24,24,24,24,24,24,]),'SIMBOLO_IGUAL':([9,15,],[25,-28,]),'DER_PARENTESIS':([11,15,16,17,18,26,27,34,35,36,37,39,49,50,51,52,53,54,61,62,63,64,65,66,67,68,69,],[-18,-28,-23,-24,-25,39,-19,-11,-12,-13,-14,-9,-38,69,39,70,-27,71,-36,-37,-30,-31,-32,-33,-34,-35,-39,]),'MENOR':([11,15,16,17,18,27,29,34,35,36,37,39,51,],[-18,-28,-23,-24,-25,-19,43,-11,-12,-13,-14,-9,43,]),'MAYOR':([11,15,16,17,18,27,29,34,35,36,37,39,51,],[-18,-28,-23,-24,-25,-19,44,-11,-12,-13,-14,-9,44,]),'IGUAL':([11,15,16,17,18,27,29,34,35,36,37,39,51,],[-18,-28,-23,-24,-25,-19,45,-11,-12,-13,-14,-9,45,]),'NOIGUAL':([11,15,16,17,18,27,29,34,35,36,37,39,51,],[-18,-28,-23,-24,-25,-19,46,-11,-12,-13,-14,-9,46,]),'MENOR_IGUAL':([11,15,16,17,18,27,29,34,35,36,37,39,51,],[-18,-28,-23,-24,-25,-19,47,-11,-12,-13,-14,-9,47,]),'MAYOR_IGUAL':([11,15,16,17,18,27,29,34,35,36,37,39,51,],[-18,-28,-23,-24,-25,-19,48,-11,-12,-13,-14,-9,48,]),'OR':([11,15,16,17,18,27,28,34,35,36,37,39,49,50,61,62,63,64,65,66,67,68,69,78,],[-18,-28,-23,-24,-25,-19,41,-11,-12,-13,-14,-9,41,41,-36,-37,-30,-31,-32,-33,-34,-35,-39,41,]),'AND':([11,15,16,17,18,27,28,34,35,36,37,39,49,50,61,62,63,64,65,66,67,68,69,78,],[-18,-28,-23,-24,-25,-19,42,-11,-12,-13,-14,-9,42,42,-36,-37,-30,-31,-32,-33,-34,-35,-39,42,]),'NOT':([12,30,31,41,42,74,],[30,30,30,30,30,30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,4,28,60,78,],[3,20,40,73,80,]),'instruccion':([0,4,28,60,78,],[4,4,4,4,4,]),'asignacion':([0,4,28,60,78,],[5,5,5,5,5,]),'expresion':([0,4,10,12,21,22,23,24,25,28,30,31,32,33,41,42,43,44,45,46,47,48,60,74,78,],[6,6,26,29,34,35,36,37,38,6,29,51,53,53,29,29,63,64,65,66,67,68,6,29,6,]),'if':([0,4,28,60,78,],[7,7,7,7,7,]),'imprimir':([0,4,28,60,78,],[8,8,8,8,8,]),'dato_id':([0,4,10,12,21,22,23,24,25,28,30,31,32,33,41,42,43,44,45,46,47,48,60,74,78,],[9,9,27,27,27,27,27,27,27,9,27,27,27,27,27,27,27,27,27,27,27,27,9,27,9,]),'dato_numerico':([0,4,10,12,21,22,23,24,25,28,30,31,32,33,41,42,43,44,45,46,47,48,60,74,78,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'condicion':([12,30,31,41,42,74,],[28,49,50,61,62,78,]),'contenido':([32,33,],[52,54,]),'if_then':([40,80,],[56,81,]),'if_else':([40,80,],[58,58,]),'if_elseif':([40,80,],[59,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion_asignacion','asignacion.py',6),
  ('instruccion -> expresion','instruccion',1,'p_instruccion_expresion','expresion.py',6),
  ('instruccion -> if','instruccion',1,'p_instruccion_if','ifelse.py',6),
  ('instruccion -> imprimir','instruccion',1,'p_instruccion_imprimir','print.py',6),
  ('init -> PUNTO_COMA','init',1,'p_init_vacio','init.py',8),
  ('asignacion -> dato_id SIMBOLO_IGUAL expresion PUNTO_COMA','asignacion',4,'p_asignacion','asignacion.py',12),
  ('if -> IF condicion instrucciones if_then','if',4,'p_if','ifelse.py',12),
  ('imprimir -> PRINTLN IZQ_PARENTESIS contenido DER_PARENTESIS PUNTO_COMA','imprimir',5,'p_imprimir_ln','print.py',12),
  ('expresion -> IZQ_PARENTESIS expresion DER_PARENTESIS','expresion',3,'p_expresion_par','expresion.py',15),
  ('init -> instrucciones PUNTO_COMA','init',2,'p_init','init.py',16),
  ('expresion -> expresion SIMBOLO_SUMA expresion','expresion',3,'p_expresion_binario','expresion.py',24),
  ('expresion -> expresion SIMBOLO_RESTA expresion','expresion',3,'p_expresion_binario','expresion.py',25),
  ('expresion -> expresion SIMBOLO_DIVICION expresion','expresion',3,'p_expresion_binario','expresion.py',26),
  ('expresion -> expresion SIMBOLO_MULTIPLICACION expresion','expresion',3,'p_expresion_binario','expresion.py',27),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_l1','init.py',25),
  ('if_then -> END PUNTO_COMA','if_then',2,'p_ifthen_end','ifelse.py',28),
  ('imprimir -> PRINT IZQ_PARENTESIS contenido DER_PARENTESIS PUNTO_COMA','imprimir',5,'p_imprimir_','print.py',30),
  ('expresion -> dato_numerico','expresion',1,'p_expresion_numerico','expresion.py',35),
  ('expresion -> dato_id','expresion',1,'p_expresion_numerico','expresion.py',36),
  ('instrucciones -> instruccion instrucciones','instrucciones',2,'p_instrucciones_l2','init.py',35),
  ('if_then -> if_else','if_then',1,'p_ifthen','ifelse.py',36),
  ('if_then -> if_elseif','if_then',1,'p_ifthen','ifelse.py',37),
  ('dato_numerico -> DATO_TIPO_FLOAT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',43),
  ('dato_numerico -> DATO_TIPO_INT64','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',44),
  ('dato_numerico -> DATO_TIPO_STRING','dato_numerico',1,'p_expresion_dato_numerico','expresion.py',45),
  ('if_elseif -> ELSE IF condicion instrucciones if_then','if_elseif',5,'p_ifelseif','ifelse.py',43),
  ('contenido -> expresion','contenido',1,'p_imprimir_contenido','print.py',48),
  ('dato_id -> ID','dato_id',1,'p_expresion_dato_id','expresion.py',57),
  ('if_else -> ELSE instrucciones END PUNTO_COMA','if_else',4,'p_ifelse','ifelse.py',60),
  ('condicion -> expresion MENOR expresion','condicion',3,'p_condicion_arit','ifelse.py',71),
  ('condicion -> expresion MAYOR expresion','condicion',3,'p_condicion_arit','ifelse.py',72),
  ('condicion -> expresion IGUAL expresion','condicion',3,'p_condicion_arit','ifelse.py',73),
  ('condicion -> expresion NOIGUAL expresion','condicion',3,'p_condicion_arit','ifelse.py',74),
  ('condicion -> expresion MENOR_IGUAL expresion','condicion',3,'p_condicion_arit','ifelse.py',75),
  ('condicion -> expresion MAYOR_IGUAL expresion','condicion',3,'p_condicion_arit','ifelse.py',76),
  ('condicion -> condicion OR condicion','condicion',3,'p_condicion_logic','ifelse.py',89),
  ('condicion -> condicion AND condicion','condicion',3,'p_condicion_logic','ifelse.py',90),
  ('condicion -> NOT condicion','condicion',2,'p_condicion_not','ifelse.py',98),
  ('condicion -> IZQ_PARENTESIS condicion DER_PARENTESIS','condicion',3,'p_condicion_par','ifelse.py',106),
]
